(function(r, B, b, g) {
	var c = {
			top: top
		},
		x = c.top.Mobi,
		F = B.getSelection ? false : true,
		i = navigator.userAgent.toLowerCase(),
		p = i.indexOf("se") > -1,
		k = /mozilla/.test(i),
		w = /opera/.test(i),
		u = /applewebkit/.test(i) && /chrome/.test(i) && parseFloat(i.match(/ chrome\/(\d+)/)[1]) >= 58,
		v = "",
		q = "unselectable",
		I = F ? ((b.selection && b.selection.createRange && b.selection.type != "None") ? b.selection.createRange() : g) : B
		.getSelection(),
		h = {
			OuterFun: "outerFun",
			Option: "option",
			Editor: "editor",
			HasRefreshClick: "hrfc",
			LinkHasClick: "linkHasClick",
			SignClassNum: "scn",
			HasRsChildStyle: "hrcs",
			Range: "range",
			NotCreateNewNode: "ncnn",
			SimpleTextEdit: "simpleTextEdit",
			HasSelectText: "hst",
			ClearSpanCursoring: "cscs",
			OldVHeight: "ovht",
			OldHwidth: "ohwt",
			HoverToolOn: "hoverToolOn",
			FloatImg: "floatImg",
			FloatBtn: "floatBtn",
			HoverToolTimeout: "htto",
			EditLineTimeout: "etto",
			SignClassNum: "signClassNum",
			SetPageChange: "spce",
			RemoveUselessChildStyleCount: "rucsc",
			PreScrollHeight: "psht",
			ChangeCount: "changeCount",
			ScrollChangeChecking: "sccg",
			FirstChooseEditor: "fcet",
			PreHtmlContent: "phct",
			Onfocused: "onfocused",
			Mousedown: "mousedown",
			Mousemove: "mousemove",
			FixRight: "fixRight",
			ScreenX: "screenX",
			ScreenY: "screenY",
			ModuleId: "moduleId",
			RreHtmlVal: "preHtmlVal",
			PreCommand: "preCommand",
			SelectedInputBlur: "sib",
			TriggerClick: "ectc",
			EndCheckClass: "endCheckClass",
			EditSignClass: "editSignClass",
			EditorEventBind: "editorEventBind"
		},
		z = {
			Contenteditable: "contenteditable",
			Emphasis: "emphasis"
		};
	BtnCommand = {
		EditContent: "editContent",
		GlobalLink: "globalLink",
		Delete: "delete",
		FontSize: "fSize",
		LineHeight: "lineHeight",
		Animation: "animation",
		EditBtnModuleStyleBtn: "editBtnModuleStyleBtn",
		EditPhotoBtn: "editPhotoBtn",
		ImgEffectBtn: "imgEffectBtn",
		PhotoShapeBtn: "photoShapeBtn",
		SimpleLinkBtn: "simpleLinkBtn",
		Opacity: "opacity",
		Border: "border",
		Shadow: "Shadow",
		Radius: "radius",
		Linkcreator: "linkcreator",
		Formats: "formats",
		Colors: "colors",
		Removeformat: "removeformat",
		TextAlign: "textAlign",
		JustifyLeft: "justifyLeft",
		JustifyCenter: "justifyCenter",
		JustifyRight: "justifyRight",
		JustifyFull: "justifyFull",
		WritingMode: "writingMode",
		Bold: "Bold",
		Italic: "Italic",
		Underline: "Underline",
		Unlink: "Unlink",
		Createlink: "Createlink",
		SingleClick: "singleClick",
		Dblclick: "dblclick",
		InputFontSize: "inputFontSize",
		InputLineHeight: "inputLineHeight",
		ChooseFormats: "chooseFormats",
		ChooseLineHeight: "chooseLineHeight",
		ChooseFontSize: "chooseFontSize",
		DeleteLink: "deleteLink"
	};
	if (/msie/.test(i)) {
		v = "-ms-"
	} else {
		if (/chrome/.test(i) || /safari/.test(i) || /yandex/.test(i)) {
			v = "-webkit-"
		} else {
			if (k) {
				v = "-moz-"
			} else {
				if (w) {
					v = "-o-"
				} else {
					if (/konqueror/.test(i)) {
						v = "-khtml-"
					} else {
						v = ""
					}
				}
			}
		}
	}
	var K, J, d, t, E, D, l;
	var o = function() {
		this.constructor.prototype.extend = function(N, M) {
			for (var L in M) {
				if (!(L in M.constructor.prototype)) {
					N[L] = M[L]
				}
			}
			for (var L in M.constructor.prototype) {
				N.constructor.prototype[L] = M[L]
			}
		}
	};
	K = new o();
	var m = function() {
		this.constructor.prototype.test = function() {
			return true
		}
	};
	J = new m();
	var a = function() {
		var M;
		var L;
		var N = this;
		this.getEventCtrl = function() {
			if (M) {
				return M
			}
			var O = function() {
				var P = this;
				P.constructor.prototype.changeParentStyle = function(U) {
					var X = U.element,
						W = U.styleName,
						R = U.styleValue,
						T = U.endCheckClass;
					if (typeof(X.parent()) == g) {
						return N
					}
					var Q = X.parent();
					if (Q.hasClass(T)) {
						return N
					}
					if (X.text().length == Q.text().length) {
						Q.css(W, "");
						U.element = Q;
						P.changeParentStyle(U)
					}
					for (var V = 0; V < Q.children().length; V++) {
						var S = Q.children().eq(V);
						if (S.text().length <= 0 && S.html().indexOf("br") < 0 && S.html().indexOf("nbsp") < 0) {
							S.replaceWith("")
						}
					}
					return N
				};
				P.constructor.prototype.changeChildStyle = function(S) {
					var V = S.element,
						U = S.styleName,
						Q = S.styleValue;
					if (typeof(V.children) == g) {
						return N
					}
					for (var T = 0; T < V.children().length; T++) {
						var R = V.children().eq(T);
						R.css(U, "");
						S.element = R;
						P.changeChildStyle(S)
					}
					return N
				};
				P.constructor.prototype.setElementStyleEffectAll = function(T) {
					var V = T.element,
						S = T.effectElement,
						U = T.styleName,
						Q = T.styleValue,
						W = T.elemenText,
						R = T.endCheckClass;
					if (V && V.length > 0) {
						V.find("*").css(U, "");
						V.find(S).css(U, Q)
					}
					T.element = V;
					P.setElementParentStyleEffectAll(T);
					return N
				};
				P.constructor.prototype.setElementParentStyleEffectAll = function(T) {
					var S = T.element,
						U = T.effectElement,
						R = T.styleName,
						Y = T.styleValue,
						X = T.elemenText,
						V = T.endCheckClass,
						W = S.parent();
					if (typeof(W) == g) {
						return N
					}
					if (W.hasClass(V) || r.trim(W.text()) != X) {
						return N
					}
					var Q = W[0].tagName.toLowerCase();
					if (Q == U) {
						W.css(R, Y)
					} else {
						if (typeof(W.css(R)) != g) {
							W.css(R, "")
						}
					}
					T.element = W;
					P.setElementParentStyleEffectAll(T);
					return N
				};
				P.constructor.prototype.checkInArray = function(S, R) {
					for (var Q = 0; Q < S.length; Q++) {
						if (S[Q] == R) {
							return true
						}
					}
					return false
				};
				P.constructor.prototype.findTagInParent = function(U, T, S) {
					var R = false;
					if (typeof(U.parent()) == g || U.parent().length <= 0) {
						return R
					}
					var Q = U.parent();
					if (Q.hasClass(S)) {
						return R
					}
					var V = Q[0].tagName.toLowerCase();
					if (V == T) {
						return Q
					} else {
						return P.findTagInParent(Q, T, S)
					}
					return R
				};
				P.constructor.prototype.filterPasteData = function(X) {
					var aa = ["div", "span", "font", "p", "u", "i", "br", "b", "a", "strong", "em"],
						ac = ["font-size", "line-height", "text-align", "color", "font-family"],
						R, T, Q, Z, V, Y, S, ad, ab;
					if (typeof(X.children) == g || X.children().length <= 0) {
						return N
					}
					for (var W = 0; W < X.children().length; W++) {
						T = X.children().eq(W);
						R = r.trim(T.prop("tagName").toLowerCase());
						if (!P.checkInArray(aa, R)) {
							T.prop("outerHTML", T.text());
							continue
						}
						Q = T.attr("style");
						if (typeof(Q) == g || Q.length <= 0) {
							continue
						}
						Q = Q.toLowerCase();
						ab = Q.split(";");
						if (ab.length <= 0) {
							continue
						}
						Z = false;
						V = [];
						for (var U = 0; U < ab.length; U++) {
							if (typeof(ab[U]) == g) {
								Z = true;
								continue
							}
							Y = ab[U].split(":");
							if (typeof(Y) == g || Y.length != 2) {
								Z = true;
								continue
							}
							S = Y[0];
							if (S.indexOf(",") > 0) {
								S = S.substring(S.lastIndexOf(","))
							}
							ad = Y[1];
							S = r.trim(S);
							if (!P.checkInArray(ac, S)) {
								Z = true;
								continue
							}
							if (S == "font-size" || S == "line-height") {
								if (ad.indexOf("px") < 0) {
									ab[U] = ""
								} else {
									Z = true
								}
							}
							V.push(ab[U] + ";")
						}
						if (Z) {
							T.attr("style", V.join(""))
						}
						P.filterPasteData(T)
					}
					return N
				};
				P.constructor.prototype.textPositionCorrect = function(S) {
					if (S.find("div").length > 0 || S.find("p") > 0) {
						return N
					}
					if (typeof(S.children) == g || S.children().length <= 0) {
						return N
					}
					for (var R = 0; R < S.children().length; R++) {
						var Q = S.children().eq(R);
						if (typeof(Q.attr("style")) != g && Q.attr("style") && Q.attr("style").indexOf("text-align") != -1 && Q.css(
								"display") != "block") {
							Q.css("display", "block")
						}
						P.textPositionCorrect(Q)
					}
					return N
				};
				P.constructor.prototype.setUnselectable = function(Q) {
					Q.fkEditorWrap.find("[" + q + "]").css(v + "user-select", "none").attr(q, "on").on("selectstart mousedown",
						false);
					Q.toolbar.find(".simpleTextEditTool").find("[" + q + "]").css(v + "user-select", "none").attr(q, "on").on(
						"selectstart mousedown", false);
					return N
				};
				P.constructor.prototype.removeUselessChildStyle = function(Y, X) {
					if (!Y.data(h.SetPageChange)) {
						return
					}
					if (typeof(X.children()) == g) {
						return
					}
					var T, aa, Q, S, R, U, Z, V;
					for (var W = 0; W < X.children().length; W++) {
						T = X.children().eq(W);
						Q = T.attr("class");
						V = (typeof(Q) == g || Q == "");
						aa = X.parent();
						cls = T.attr("class");
						if ((S == "span" || S == "font" || S == "a") && T.text().length <= 0 && V && T.html().indexOf("br") <= 0) {
							T.replaceWith("");
							return
						}
						if (V) {
							S = T.prop("tagName").toLowerCase();
							R = T.attr("style");
							U = T.attr("color");
							Z = T.attr("face");
							if (typeof(R) == g || R == "") {
								if (typeof(cls) == g && (S == "span" || (S == "font" && typeof(U) == g && typeof(Z) == g))) {
									T.replaceWith(T.html());
									T = aa
								}
							}
						}
						P.removeUselessChildStyle(Y, T)
					}
				};
				P.constructor.prototype.removeElementProp = function(R) {
					var U = R.element,
						T = R.attrName,
						Q, V;
					V = U.attr(T);
					if (typeof(V) != g && V != "") {
						U.removeAttr(T)
					}
					for (var S = 0; S < U.children().length; S++) {
						Q = U.children().eq(S);
						V = Q.attr(T);
						if (typeof(V) != g && V != "") {
							Q.removeAttr(T)
						}
						P.removeElementProp({
							element: Q,
							attrName: T
						})
					}
				};
				P.constructor.prototype.setElementStyle = function(S) {
					var V = S.element,
						U = S.styleName,
						Q = S.styleValue,
						R, W;
					V.css(U, Q);
					for (var T = 0; T < V.children().length; T++) {
						R = V.children().eq(T);
						R.css(U, Q);
						P.setElementStyle({
							element: R,
							styleName: U,
							styleValue: Q
						})
					}
				}
			};
			return M = new O()
		};
		this.getUICtrl = function() {}
	};
	E = new a();
	var s = function() {
		var M;
		var L;
		var N = this;
		this.getEventCtrl = function() {
			if (M) {
				return M
			}
			var O = function() {
				var P = this;
				var Q = new Date().getTime();
				var R = new Date().getTime();
				P.constructor.prototype.getWindowSelection = function() {
					if (!F) {
						return B.getSelection()
					}
					if (P.checkSelectionRange()) {
						return b.selection.createRange()
					}
					return I
				};
				P.constructor.prototype.checkIEGetSelection = function() {
					var S = P.getWindowSelection(),
						T = "baseOffset";
					if (!S) {
						return false
					}
					if (T in S && S.baseOffset == 0) {
						return false
					}
					return true
				};
				P.constructor.prototype.isNumberPress = function(S) {
					if (S >= 48 && S <= 57) {
						return true
					}
					if (S >= 96 && S <= 105) {
						return true
					}
					if (S == 8 || S == 46 || S == 37 || S == 39) {
						return true
					}
					return false
				};
				P.constructor.prototype.checkSelectionRange = function() {
					return b.selection && b.selection.createRange && b.selection.type != "None"
				};
				P.constructor.prototype.getSelectedNode = function() {
					var T, U = P.getWindowSelection(),
						S;
					if (!F) {
						T = U.anchorNode
					}
					if (!T && P.checkSelectionRange()) {
						U = b.selection;
						var S = U.getRangeAt ? U.getRangeAt(0) : U.createRange();
						T = S.commonAncestorContainer ? S.commonAncestorContainer : S.parentElement ? S.parentElement() : S.item(0)
					}
					return T ? (T.nodeName == "#text" ? r(T.parentNode) : r(T)) : false
				};
				P.constructor.prototype.detectElement = function(U) {
					var T = U.tags,
						W = false,
						S, V = P.getSelectedNode();
					if (V) {
						S = V.prop("tagName").toLowerCase();
						r.each(T, function(X, Y) {
							if (S == Y) {
								W = true;
								return false
							}
						});
						if (W) {
							return W
						}
						V.parents().each(function() {
							S = r(this).prop("tagName").toLowerCase();
							r.each(T, function(X, Y) {
								if (S == Y) {
									W = true;
									return false
								}
							});
							if (W) {
								return false
							}
						});
						return W
					}
					return false
				};
				P.constructor.prototype.detectElementCss = function(W) {
					var U = P.getSelectedNode(),
						T = "fk-editor",
						V, S;
					if (k && U && U.length > 0 && U.hasClass(T)) {
						S = P.detectElementDeepCss(U, W);
						if (S == "") {
							S = U.css(W)
						}
						return S
					}
					if (W && U) {
						return U.css(W)
					}
					return ""
				};
				P.constructor.prototype.detectElementDeepCss = function(U, W) {
					var S = "",
						V = U.text().length;
					if (V <= 0) {
						return S
					}
					if (U.children().length <= 0 && V > 0) {
						S = U.css(W);
						return S
					}
					for (var T = 0; T < U.children().length; T++) {
						S = P.detectElementDeepCss(U.children().eq(T), W);
						if (S != "") {
							break
						}
					}
					return S
				};
				P.constructor.prototype.refuseStyle = function(V) {
					var U = P.getSelectedNode();
					if (U && U.is("[style]") && U.css(V) != "") {
						var S = U.css(V),
							T;
						U.css(V, "");
						T = U.attr("style");
						U.css(V, S);
						return T
					}
					return ""
				};
				P.constructor.prototype.setSelection = function(W, V) {
					var S, T = P.getWindowSelection();
					if (F) {
						T.execCommand(W, false, V)
					} else {
						if (T.anchorNode && T.getRangeAt) {
							S = T.getRangeAt(0)
						}
						if (S) {
							T.removeAllRanges();
							T.addRange(S)
						}
						if (!i.match(/msie/)) {
							b.execCommand("StyleWithCSS", false, false)
						}
						try {
							b.execCommand(W, false, V)
						} catch (U) {
							console.log(U)
						}
					}
					P.affectStyleAround(false, true);
					return N
				};
				P.constructor.prototype.affectStyleAround = function(T, U) {
					var V = P.getSelectedNode();
					V = V ? V : T;
					if (V && U == false) {
						if (V.parent().is("[style]")) {
							V.attr("style", V.parent().attr("style"))
						}
						if (V.is("[style]")) {
							V.find("*").attr("style", V.attr("style"))
						}
						return N
					}
					if (T && U && T.is("[style]")) {
						var S = U.split(";");
						S = S[0].split(":");
						if (S[0] == "color") {
							var W = false;
							T.find("*").each(function(X, Y) {
								if (X == 0 && r(this).attr("color") || r(this).parent().attr("color")) {
									W = true
								}
								if (!r(this).attr("color")) {
									if (!W) {
										r(this).css(S[0], S[1])
									}
								}
							})
						} else {
							if (T.is("[style*=" + S[0] + "]")) {
								T.find("*").css(S[0], S[1])
							}
						}
						P.selectText(T)
					}
					return N
				};
				P.constructor.prototype.selectText = function(T) {
					if (I == g || !T) {
						return N
					}
					var T = T[0],
						S, U = P.getWindowSelection();
					if (F) {
						U.moveToElementText(T);
						U.select();
						return N
					}
					if (typeof(T) == g || T == null) {
						return N
					}
					S = b.createRange();
					S.selectNodeContents(T);
					U.removeAllRanges();
					U.addRange(S);
					if (r(T).is(":empty")) {
						r(T).append("&nbsp;");
						P.selectText(r(T))
					}
					return N
				};
				P.constructor.prototype.setNodeRange = function(V) {
					if (typeof(V) == g) {
						return
					}
					if (F) {
						return N
					}
					try {
						var S, T, W = P.getWindowSelection();
						W.removeAllRanges();
						if (u) {
							W.selectAllChildren(V)
						} else {
							S = V.childNodes;
							if (S && S.length > 0) {
								for (var U = 0; U < S.length; U++) {
									var T = b.createRange();
									T.selectNode(S[U]);
									W.addRange(T)
								}
								return N
							}
							T = b.createRange();
							T.selectNode(V)
						}
					} catch (X) {
						console.log(X)
					}
					return N
				};
				P.constructor.prototype.getSelectText = function(U, T) {
					var W = "",
						S, V = P.getWindowSelection();
					if (!F && V.anchorNode && V.getRangeAt) {
						S = V.getRangeAt(0);
						if (!T) {
							U.data(h.Range, S)
						}
						W = S.toString()
					}
					if (F && I != g) {
						if (!T) {
							U.data(h.Range, V)
						}
						W = V.htmlText
					}
					return W
				};
				P.constructor.prototype.setSelectRange = function(S) {
					if (S == null) {
						return N
					}
					var T = P.getWindowSelection();
					if (!F) {
						T.removeAllRanges();
						P.getWindowSelection().addRange(S);
						return N
					}
					if (P.checkSelectionRange()) {
						b.selection.createRangeCollection(S)
					}
					return N
				};
				P.constructor.prototype.setTagStyle = function(S) {
					if (typeof(S.styleName) == g) {
						S.styleName = ""
					}
					if (typeof(S.styleValue) == g) {
						S.styleValue = ""
					}
					var U = P.refuseStyle(S.styleName),
						T = {};
					if (typeof(U) == g) {
						U = ""
					}
					if (typeof(S.tagName) == g || S.tagName == "") {
						S.tagName = "span"
					}
					S.tAttr = "style";
					S.tVal = S.styleName + ":" + S.styleValue + ";" + U;
					return P.replaceSelectedStyle(S)
				};
				P.constructor.prototype.replaceSelectedStyle = function(V) {
					var aj = V.tagName,
						ae = V.tAttr,
						ah = V.tVal,
						aa = V.styleName,
						ag = V.styleValue,
						Z = V.editor,
						am = V.notCreateNewNode,
						T = V.attr2,
						an = V.attr2Value,
						Y = V.command,
						ac = V.createNewNodeAction,
						at, ai = 20,
						ar = 50,
						ab = 10,
						ad = "";
					if (!Z) {
						console.log("replaceSelectedStyle err, editor = " + Z);
						return N
					}
					ad = Z.data(h.EndCheckClass);
					at = Z.data(h.EditSignClass);
					if (typeof(am) == g) {
						am = false
					}
					Q = new Date().getTime();
					if ((Q - R) < ai) {
						return N
					}
					var U = Z.data(h.HasRefreshClick),
						af = Z.data(h.SignClassNum),
						ak = Z.find("." + Z.data(h.EditSignClass) + af),
						W = r.trim(P.getSelectText(Z, true)).length,
						ao = V.isSetLinkColor ? true : false;
					if (!ao && !U && ak.length > 0 && (W > 0 || am || (r.browser.msie && r.browser.version == "9.0"))) {
						ak.css(aa, ag);
						if (typeof(T) != g && T != "") {
							ak.attr(T, an)
						}
						if (Z.data(h.HasRsChildStyle) < ar) {
							Z.data(h.HasRsChildStyle, parseInt(Z.data(h.HasRsChildStyle)) + 1);
							ak.find("*").css(aa, "");
							if (aa == "color" || T == "color") {
								E.getEventCtrl().removeElementProp({
									element: ak,
									attrName: "color"
								})
							}
							if (Z.data(h.HasRsChildStyle) < ab) {
								E.getEventCtrl().changeParentStyle({
									element: ak,
									styleName: aa,
									styleValue: ag,
									endCheckClass: ad
								})
							}
						}
						P.setOrUnsetUnderline({
							command: Y,
							element: ak,
							editor: Z,
							endCheckClass: ad
						});
						return N
					}
					R = Q;
					Z.data(h.HasRefreshClick, false);
					Z.data(h.HasRsChildStyle, 0);
					if (ac == true) {
						return N
					}
					var al = P.getWindowSelection(),
						aq, X, S, ap;
					if (al.anchorNode && al.getRangeAt) {
						aq = al.getRangeAt(0);
						X = b.createElement(aj);
						if (ak.length > 0) {
							if (ak.html() == "&nbsp;") {
								ak.replaceWith("")
							} else {
								ak.removeClass(at + af)
							}
						}
						ap = Z.attr("style");
						Z.height(Z.height() + "px");
						af = parseInt(af) + 1;
						Z.data(h.SignClassNum, af);
						r(X).addClass(at + af);
						S = aq.extractContents();
						X.appendChild(S);
						Z.attr("style", ap);
						if (typeof(T) != g && T != "") {
							r(X).attr(T, an)
						}
						aq.insertNode(X);
						if (ao) {
							if (r(X).parent().attr("color")) {
								r(X).attr("style", "")
							} else {
								r(X).attr("style", "").css(aa, ag)
							}
						} else {
							r(X).attr("style", "").css(aa, ag)
						}
						if (Y != BtnCommand.Underline) {
							if (ae == "style") {
								P.affectStyleAround(r(X), ah)
							} else {
								P.affectStyleAround(r(X), true)
							}
						}
						P.setOrUnsetUnderline({
							command: Y,
							element: r(X),
							editor: Z,
							endCheckClass: ad
						})
					}
				};
				P.constructor.prototype.setOrUnsetUnderline = function(X) {
					var Y = X.command,
						W = X.element,
						Z = X.editor,
						ac = X.endCheckClass,
						aj;
					if (Y != BtnCommand.Underline) {
						return
					}
					var U = false,
						af = false,
						aa = false,
						ag = false,
						V = false,
						ai, ad = "none",
						ah = "underline",
						ab = "text-decoration";
					elemenText = r.trim(W.text());
					aj = Z.attr("style");
					Z.height(Z.height() + "px");
					U = E.getEventCtrl().findTagInParent(W, "u", ac);
					if (U == false) {
						af = E.getEventCtrl().findTagInParent(W, "a", ac);
						if (af != false && af.css(ab) != ad) {
							aa = af;
							af = true
						} else {
							af = false
						}
						if (af == false) {
							var S = W.find("u");
							if (S.length > 0 && r.trim(S.eq(0).text()) == elemenText) {
								ag = true
							}
							if (ag == false) {
								var T = W.find("a");
								if (T.length > 0 && r.trim(T.eq(0).text()) == elemenText && T.eq(0).css(ab) != ad) {
									V = true
								} else {
									V = false
								}
							}
						}
					}
					P.setSelection(Y);
					ai = {
						element: W,
						effectElement: "a",
						styleName: ab,
						styleValue: ad,
						elemenText: elemenText,
						endCheckClass: ac
					};
					if (U != false || af != false || ag != false || V != false) {
						if (af == true && r.trim(aa.text()) != elemenText) {
							aa.find("*").css(ab, "");
							if (aa.css(ab) != ad) {
								aa.css(ab, ad)
							} else {
								aa.css(ab, ah)
							}
						} else {
							E.getEventCtrl().setElementStyleEffectAll(ai)
						}
					} else {
						var ae = r("<u></u>");
						ae.html(W.html());
						W.html(ae.prop("outerHTML"));
						E.getEventCtrl().setElementStyleEffectAll(ai)
					}
					P.setNodeRange(W[0]);
					Z.attr("style", aj);
					return N
				};
				P.constructor.prototype.popCursorLastDiv = function(U) {
					var X = U.obj,
						V = U.editor,
						T = U.checkOnfocused;
					if (T && V.data(h.Onfocused)) {
						return
					}
					try {
						if (!F) {
							var S = B.getSelection();
							if (S.selectAllChildren && X[0]) {
								S.selectAllChildren(X[0]);
								S.collapseToEnd()
							}
							return
						}
						if (b.selection) {
							var S = b.selection.createRange();
							S.moveToElementText(X[0]);
							S.collapse(false);
							S.select()
						}
					} catch (W) {}
				}
			};
			return M = new O()
		};
		this.getUICtrl = function() {
			if (L) {
				return L
			}
			var O = function() {};
			return L = new O()
		}
	};
	d = new s();
	var j = function() {
		var M;
		var L;
		var N = this;
		this.getEventCtrl = function() {
			if (M) {
				return M
			}
			var O = function() {
				var P = this;
				K.extend(this, d.getEventCtrl());
				P.constructor.prototype.setSelection = function() {
					console.log("rewrite setSelection");
					return N
				}
			};
			return M = new O()
		};
		this.getUICtrl = function() {}
	};
	t = new j();
	var G = function() {
		var M;
		var L;
		var N = this;
		this.getEventCtrl = function() {
			if (M) {
				return M
			}
			var O = function() {
				var S = this,
					P = [],
					Q = [],
					U, T, R;
				S.constructor.prototype.addBtnParam = function(X, ac, Y, V, W, aa, Z, ab) {
					return P.push({
						moduleName: X,
						command: ac,
						key: Y,
						tag: V,
						cls: W,
						emphasis: aa,
						className: Z,
						title: ab
					})
				};
				S.constructor.prototype.getButtonsData = function(V) {
					var W = V.option;
					if (P && P.length > 0) {
						return S.getShowOrderBtn({
							btns: P,
							toolBtnOrder: W.Tool.ToolBtnOrder,
							option: W
						})
					}
					S.addBtnParam("EditColorBtn", BtnCommand.Colors, "", "", "tool-colors tool-colorsNew", false, "tool-color",
						"颜色");
					S.addBtnParam("EditFormatsBtn", BtnCommand.Formats, "", "", "tool-formats tool-formatsNew", false,
						"tool-family", "文字字体");
					S.addBtnParam("EditFontSizeBtn", BtnCommand.FontSize, "", "", "tool-fontSize tool-fontSizeNew", false,
						"tool-size", "文字大小");
					S.addBtnParam("EditBreakLineBtn");
					S.addBtnParam("EditBoldBtn", BtnCommand.Bold, "B", ["b", "strong", "h1", "h2", "h3", "h4", "h5", "h6"],
						"tool-bold tool-boldNew", true, "", "加粗");
					S.addBtnParam("EditItalicBtn", BtnCommand.Italic, "I", ["i", "em"], "tool-italic tool-italicNew", true, "",
						"斜体");
					S.addBtnParam("EditUnderlineBtn", BtnCommand.Underline, "U", ["u"], "tool-underline", true, "", "下划线");
					S.addBtnParam("EditSeperatorBtn");
					S.addBtnParam("EditWritingModeBtn", BtnCommand.WritingMode, "", "", "tool-writingMode tool-writingModeNew",
						false, "", "文字排列方式");
					S.addBtnParam("EditLineHeightBtn", BtnCommand.LineHeight, "", "", "tool-lineHeight tool-lineHeightNew", false,
						"", "行高");
					S.addBtnParam("EditTextAlignBtn", BtnCommand.TextAlign, "", "", "tool-textAlign", false, "", "对齐方式");
					S.addBtnParam("EditSeperatorBtn");
					S.addBtnParam("EditLinkBtn", BtnCommand.Linkcreator, "L", ["a"], "tool-linkcreator tool-linkcreatorNew",
						false, "", "设置链接");
					S.addBtnParam("EditRemoveFormatBtn", BtnCommand.Removeformat, ".", "", "tool-removeformat", false, "", "清除格式");
					return S.getShowOrderBtn({
						btns: P,
						toolBtnOrder: W.Tool.ToolBtnOrder,
						option: W
					})
				};
				S.constructor.prototype.addHoverBtnParam = function(V, Y, W, X) {
					return Q.push({
						moduleName: V,
						command: Y,
						className: W,
						title: X
					})
				};
				S.constructor.prototype.getHoverShowButtons = function(V) {
					var W = V.option;
					if (Q && Q.length > 0) {
						return S.getShowOrderBtn({
							btns: Q,
							toolBtnOrder: W.HoverTool.ToolBtnOrder,
							option: W
						})
					}
					S.addHoverBtnParam("EditContentBtn", BtnCommand.EditContent, "tool-editContent tool-editContentNew", "编辑文本");
					return S.getShowOrderBtn({
						btns: Q,
						toolBtnOrder: W.HoverTool.ToolBtnOrder,
						option: W
					})
				};
				S.constructor.prototype.getShowOrderBtn = function(W) {
					var Y = W.option,
						Z = W.btns,
						ab = W.toolBtnOrder,
						aa = [];
					for (var X = 0; X < ab.length; X++) {
						for (var V = 0; V < Z.length; V++) {
							if (Z[V]["moduleName"] == ab[X]) {
								if (Z[V]["moduleName"] == "EditContentBtn") {
									Z[V]["title"] = Y.EditContentBtn.name
								}
								aa.push(Z[V]);
								break
							}
						}
					}
					return aa
				};
				S.constructor.prototype.buttonEmphasize = function(Y) {
					var am = Y.option,
						at = Y.buttons,
						af = Y.editor,
						al = c.top.$("#" + am.css + "-toolBar-" + am.moduleId),
						aj = al.find(".tool-formats"),
						ak = al.find(".tool-fontSize"),
						ac = ak.find(".selectDiv span"),
						aw = al.find(".tool-lineHeight"),
						an = al.find(".tool-color ." + am.css + "-tool-icon"),
						av = am.css + "-tool-depressedNew",
						ag = am.css + "-tool-depressedNewHover",
						ai = am.css + "-tool-depressedNewShow",
						ae = '<div class="' + av + '"></div>',
						aa, ap, ad;
					for (var ao = 0; ao < at.length; ao++) {
						if (!E.getEventCtrl().checkInArray(am.Tool["ToolBtnOrder"], at[ao].moduleName)) {
							continue
						}
						ad = at[ao].command;
						if (at[ao].emphasis && at[ao].tag != "") {
							aa = at[ao].cls.split(" ")[0];
							ap = d.getEventCtrl().detectElement({
								tags: at[ao].tag
							});
							if (!ap) {
								switch (ad) {
									case BtnCommand.Bold:
										if ("bold" == d.getEventCtrl().detectElementCss("font-weight")) {
											ap = true
										}
										break;
									case BtnCommand.Italic:
										if ("italic" == d.getEventCtrl().detectElementCss("font-style")) {
											ap = true
										}
										break;
									case BtnCommand.Underline:
										if (/underline/.test(d.getEventCtrl().detectElementCss("text-decoration"))) {
											ap = true
										}
										break;
									default:
										break
								}
							}
							if (ap) {
								if (al.find("." + aa).find("." + ai).length <= 0) {
									al.find("." + aa).find("." + av).addClass(ai).removeClass(ag)
								}
							} else {
								al.find("." + aa).find("." + av).removeClass(ai).addClass(ag)
							}
						}
						if (ad == BtnCommand.TextAlign) {
							var aq = d.getEventCtrl().detectElementCss("text-align");
							switch (aq) {
								case "center":
									_EditTextAlignBtn.getEventCtrl().textAlignEmphasize({
										editor: af,
										toolbar: al,
										command: BtnCommand.JustifyCenter
									});
									break;
								case "right":
									_EditTextAlignBtn.getEventCtrl().textAlignEmphasize({
										editor: af,
										toolbar: al,
										command: BtnCommand.JustifyRight
									});
									break;
								case "justify":
									_EditTextAlignBtn.getEventCtrl().textAlignEmphasize({
										editor: af,
										toolbar: al,
										command: BtnCommand.JustifyFull
									});
									break;
								default:
									_EditTextAlignBtn.getEventCtrl().textAlignEmphasize({
										editor: af,
										toolbar: al,
										command: BtnCommand.JustifyLeft
									});
									break
							}
						}
						if (ad == BtnCommand.Colors) {
							return;
							var W, ax = "color";
							W = d.getEventCtrl().detectElementCss(ax);
							if (_EditColorBtn.getEventCtrl().checkColorIsWhite(W)) {
								an.css("border", "solid 1px #ccc")
							} else {
								an.css("border", "0px")
							}
							an.css("background", W);
							an.removeClass("fk-colorPicker-transparentIco")
						}
						if (ad == BtnCommand.Formats) {
							var au, ax = "font-family",
								X = am.EditFormatsBtn.selectedData,
								ab = false,
								ah;
							if (X && X.length > 0) {
								au = d.getEventCtrl().detectElementCss(ax);
								au = au.replace(/"/g, "");
								au = au.replace(/'/g, "");
								for (var ar = 0; ar < X.length; ar++) {
									if (r.trim(X[ar][0]).indexOf(r.trim(au)) >= 0) {
										ab = true;
										aj.find(".selectDiv span").html(X[ar][1]);
										ah = aj.find("." + am.css + "-formatContent");
										ah.find(".formatDef").removeClass("formatDef");
										ah.find("a").eq(ar).addClass("formatDef");
										break
									}
								}
								if (!ab) {
									if (au.indexOf(",") > 0) {
										au = au.substring(0, au.indexOf(","))
									}
									aj.find(".selectDiv span").html(au)
								}
							}
						}
						if (ad == BtnCommand.FontSize) {
							var ax = "font-size",
								V = 20;
							fontSize = d.getEventCtrl().detectElementCss(ax);
							fontSize = parseInt(fontSize.replace(am.funit, ""));
							if (fontSize <= 0) {
								fontSize = V
							}
							if (ac.attr(z.Contenteditable) == "true") {
								ak.find(".selectDiv span").attr("_value", fontSize).html(fontSize)
							} else {
								ak.find(".selectDiv span").attr("_value", fontSize).html(fontSize + "px")
							}
						}
						if (ad == BtnCommand.LineHeight) {
							var Z, ax = "line-height",
								V = 20;
							Z = d.getEventCtrl().detectElementCss(ax);
							Z = Z.replace(am.funit, "");
							if (isNaN(Z) && fontSize) {
								Z = fontSize
							}
							if (Z <= 0) {
								Z = V
							}
							aw.find(".selectDiv span").attr("_value", Z)
						}
					}
				};
				S.constructor.prototype.bindToolBtnEvent = function(Z) {
					var W = Z.option,
						Y = Z.editor,
						ab = Z.toolbar,
						V = Z.module,
						X = Z.fkEditorWrap,
						ac = ab.find(".simpleTextEditTool .tool"),
						aa = ab.find(".editToolIcon"),
						ad = "mouseup.hoverToolButton";
					if (p) {
						aa.unbind(ad).bind(ad, function(ae) {
							ae.stopPropagation()
						})
					}
					aa.unbind("click.hoverToolButton").bind("click.hoverToolButton", function() {
						Z.thisBtnElement = this;
						S.hoverToolButtonClick(Z);
						return false
					});
					if (!W.simpleTool) {
						ac.unbind("click.toolbutton").bind("click.toolbutton", function(af) {
							Y.data(h.HasRsChildStyle, 0);
							_EditColorBtn.getEventCtrl().backTextSelectedStatus(Z);
							r(".J_advanceColorPicker").hide();
							if (p) {
								var ae = this;
								d.getEventCtrl().setSelectRange(Y.data(h.Range));
								setTimeout(function() {
									Z.thisBtnElement = ae;
									!!W.btnModuleEdit ? S.toolButtonClickForBtnModuel(Z) : S.toolButtonClick(Z)
								}, 300)
							} else {
								Z.thisBtnElement = this;
								!!W.btnModuleEdit ? S.toolButtonClickForBtnModuel(Z) : S.toolButtonClick(Z)
							}
							return false
						})
					}
					return N
				};
				S.constructor.prototype.hoverToolButtonClick = function(X) {
					var af = X.option,
						ab = X.editor,
						W = X.module,
						am = X.fkEditorWrap,
						ae = X.toolbar,
						Y = X.thisBtnElement,
						ac = c.top.$(Y),
						aa = ac.attr("command"),
						ag = af.btnModuleEdit,
						ai = af.simpleTool,
						V = 500,
						aj = true,
						Z = af.tipTitle;
					ab.data(h.PreCommand, aa);
					_EditToolBase.getEventCtrl().hideToolBarMask();
					switch (aa) {
						case BtnCommand.EditContent:
							_EditToolBase.getEventCtrl().animateHideToolSecondPanel(af);
							if (ab.data(h.TriggerClick)) {
								ab.data(h.TriggerClick, false);
								aj = false
							}
							if (ab.find(".editTip").length > 0) {
								ab.data(h.PreHtmlContent, "")
							} else {
								ab.data(h.PreHtmlContent, ab.html())
							}
							ab.data(h.SimpleTextEdit, true);
							ab.data(h.HasRefreshClick, true);
							ab.removeData(h.Range, true);
							ae.find(".simpleTextHoverTool").hide();
							ae.find(".simpleTextEditTool").fadeIn(V);
							ab.css("cursor", "text");
							_EditLinkBtn.getEventCtrl().handTagANotJump(ab);
							W.addClass("formLockEdit");
							if (ab.not(":focus")) {
								clearTimeout(R);
								var ah = 100;
								R = setTimeout(function() {
									ab.find(".editTip").remove();
									ab.attr(z.Contenteditable, true).focus();
									_EditBtnBase.getEventCtrl().buttonEmphasize(X)
								}, ah)
							}
							if (!!ag) {
								otherOption = {};
								otherOption.command = BtnCommand.EditContent;
								_EditBtnBase.getEventCtrl().selectChangeForBtnModuel(X, otherOption)
							}
							d.getEventCtrl().popCursorLastDiv({
								obj: ab,
								editor: ab,
								checkOnfocused: true
							});
							_EditToolBase.getEventCtrl().calcuToolBarPos(X);
							_EditToolBase.getEventCtrl().editToolBarMask(af.moduleId);
							break;
						case BtnCommand.GlobalLink:
							_EditToolBase.getEventCtrl().animateHideToolSecondPanel(af);
							ab.data(h.PreHtmlContent, ab.html());
							if (ab.find(".editTip").length > 0 && (!ag && !ai)) {
								c.top.Fai.ing("请输入内容", true);
								return
							}
							if (af.globalJumpCtrlFun && af.globalJumpCtrlFun != "") {
								var al, ad = {},
									ak = ae.find(".simpleTextHoverTool .tool-linkNew");
								if (!ai) {
									d.getEventCtrl().setNodeRange(ab[0]);
									al = d.getEventCtrl().getSelectText(ab, false);
									ad = _EditLinkBtn.getEventCtrl().getGlobalLinkPreData(ab)
								}
								if (!ag && !ai) {
									if (al && al != "") {
										if (ad._lide == "") {
											ab.data(h.TriggerClick, true);
											ae.find(".tool-linkcreator").trigger("click");
											setTimeout(function() {
												ab.attr(z.Contenteditable, false)
											}, 500)
										} else {
											_EditGlobalLinkBtn.getEventCtrl().showGlobalLinkPanel(X);
											c.top.Fai.fkEval(af.globalJumpCtrlFun.replace("xxx", c.top.$.toJSON(ad)))
										}
									}
								} else {
									_EditGlobalLinkBtn.getEventCtrl().showGlobalLinkPanel(X);
									c.top.Fai.fkEval(af.globalJumpCtrlFun)
								}
							}
							break;
						case BtnCommand.Delete:
							_EditToolBase.getEventCtrl().deleteOrHideToolBar(af);
							if (af.deleteFun && af.deleteFun != "") {
								c.top.Fai.fkEval(af.deleteFun)
							} else {
								if (!ai) {
									am.remove()
								}
							}
							break;
						case BtnCommand.Animation:
							_EditToolBase.getEventCtrl().animateHideToolSecondPanel(af);
							if (af.animationFun && af.animationFun != "") {
								c.top.Fai.fkEval(af.animationFun)
							} else {
								am.remove()
							}
							break;
						case BtnCommand.EditBtnModuleStyleBtn:
							_EditToolBase.getEventCtrl().animateHideToolSecondPanel(af);
							if (af.editBtnModuleStyleBtnFun && af.editBtnModuleStyleBtnFun != "") {
								c.top.Fai.fkEval(af.editBtnModuleStyleBtnFun)
							}
							break;
						case BtnCommand.EditPhotoBtn:
							_EditToolBase.getEventCtrl().animateHideToolSecondPanel(af);
							if (af.editPhotoFun && af.editPhotoFun != "") {
								c.top.Fai.fkEval(af.editPhotoFun)
							}
							break;
						case BtnCommand.ImgEffectBtn:
							_EditToolBase.getEventCtrl().animateHideToolSecondPanel(af);
							if (af.imgEffectFun && af.imgEffectFun != "") {
								c.top.Fai.fkEval(af.imgEffectFun)
							}
							break;
						case BtnCommand.PhotoShapeBtn:
							_EditToolBase.getEventCtrl().animateHideToolSecondPanel(af);
							if (af.photoShapeFun && af.photoShapeFun != "") {
								c.top.Fai.fkEval(af.photoShapeFun)
							}
							break;
						case BtnCommand.SimpleLinkBtn:
							_EditToolBase.getEventCtrl().animateHideToolSecondPanel(af);
							if (af.simpleLinkFun && af.simpleLinkFun != "") {
								c.top.Fai.fkEval(af.simpleLinkFun)
							}
							break;
						case BtnCommand.Opacity:
							_EditToolBase.getEventCtrl().animateHideToolSecondPanel(af);
							_EditOpacityBtn.getEventCtrl().showOpacityPanel(X);
							break;
						case BtnCommand.Border:
							_EditToolBase.getEventCtrl().animateHideToolSecondPanel(af);
							_EditBorderBtn.getEventCtrl().showBorderPanel(X);
							break;
						case BtnCommand.Shadow:
							_EditToolBase.getEventCtrl().animateHideToolSecondPanel(af);
							_EditShadowBtn.getEventCtrl().showShadowPanel(X);
							break;
						default:
							break
					}
					Z && _EditToolBase.getEventCtrl().hideSimpleTip(ae.find(".simpleTextHoverTool .tool .editToolIcon"));
					ab.trigger("change");
					aj && _EditToolBase.getEventCtrl().editToolLogDog({
						module: W,
						command: aa
					})
				};
				S.constructor.prototype.toolButtonClick = function(ae) {
					var ac = ae.option,
						ad = ae.editor,
						Y = ae.module,
						af = ae.toolbar,
						X = ae.thisBtnElement;
					toolbutton = af.find(".tool"), jqThisBtn = c.top.$(X), command = jqThisBtn.attr("command"), colorBar = af.find(
							".tool-color ." + ac.css + "-tool-icon"), emphasize = ac.css + "-tool-depressedNew", emphasizeHover = ac.css +
						"-tool-depressedNewHover", emphasizeShow = ac.css + "-tool-depressedNewShow", needLogDog = true;
					if (ad.not(":focus")) {
						ad.attr(z.Contenteditable, true).focus()
					}
					if (command == BtnCommand.Removeformat) {
						ad.data(h.HasRefreshClick, true)
					}
					_EditorBase.getEventCtrl().setEidtorSelectedRule({
						editor: ad,
						command: command
					});
					ad.data(h.PreCommand, command);
					switch (command) {
						case BtnCommand.Linkcreator:
							if (ad.data(h.TriggerClick)) {
								ad.data(h.TriggerClick, false);
								needLogDog = false
							}
							_EditToolBase.getEventCtrl().animateHideToolSecondPanel(ac);
							if (ac.jumpCtrlFun && ac.jumpCtrlFun != "" && !ad.data(h.LinkHasClick)) {
								var ag = d.getEventCtrl().getSelectText(ad, true);
								linkPreData = _EditLinkBtn.getEventCtrl().getLinkPreData();
								ad.data(h.LinkHasClick, true);
								if (ag && ag != "") {
									c.top.Fai.fkEval(ac.jumpCtrlFun.replace("xxx", c.top.$.toJSON(linkPreData)))
								}
								clearTimeout(U);
								U = setTimeout(function() {
									ad.data(h.LinkHasClick, false)
								}, 2000)
							}
							break;
						case BtnCommand.Formats:
							_EditFormatsBtn.getEventCtrl().showFormatToolBar(ae);
							break;
						case BtnCommand.FontSize:
							_EditFontSizeBtn.getEventCtrl().showSizeToolBar(ae);
							break;
						case BtnCommand.LineHeight:
							_EditLineHeightBtn.getEventCtrl().showLineHiehgtToolBar(ae);
							break;
						case BtnCommand.Colors:
							_EditToolBase.getEventCtrl().animateHideToolSecondPanel(ac);
							var ag = d.getEventCtrl().getSelectText(ad, true);
							var W = {
								moduleId: ac.moduleId,
								target: colorBar,
								onShowStatus: x.getPreviewWindow().Mobi.simpleTextColoronShowStatus,
								inputHexStatus: x.getPreviewWindow().Mobi.simpleTextColorInputHexStatus,
								onchange: x.getPreviewWindow().Mobi.simpleTextSetTextColor,
								inFaiTop: true,
								left: -283,
								top: -12
							};
							jqThisBtn.faiColorPickerAlp(W);
							x.simpleTextList = x.simpleTextList || x.getPreviewWindow().Mobi.simpleTextList;
							if (x.simpleTextList.allEditors) {
								for (var ab = 0; ab < x.simpleTextList.allEditors.length; ab++) {
									var V = x.simpleTextList.allEditors[ab]["id"];
									if (V == ac.moduleId) {
										x.simpleTextList.chooseEditor = x.simpleTextList.allEditors[ab]["editor"];
										break
									}
								}
							}
							_EditColorBtn.getEventCtrl().simpleTextColorInputHexStatus({
								state: 1,
								editor: ad,
								option: ac
							});
							break;
						case BtnCommand.Underline:
							_EditToolBase.getEventCtrl().animateHideToolSecondPanel(ac);
							if (r.trim(d.getEventCtrl().getSelectText(ad, true)).length > 0 && ad.find("a").length > 0) {
								d.getEventCtrl().setTagStyle({
									editor: ad,
									command: command
								})
							} else {
								d.getEventCtrl().setSelection(command)
							}
							break;
						case BtnCommand.Removeformat:
							_EditToolBase.getEventCtrl().animateHideToolSecondPanel(ac);
							if (r.trim(d.getEventCtrl().getSelectText(ad, false)).length == r.trim(ad.text()).length) {
								ad.html(ad.text())
							} else {
								var Z = "20px",
									aa = 100;
								if (F) {
									d.getEventCtrl().setTagStyle({
										styleName: "font-size",
										styleValue: Z,
										editor: ad
									})
								}
								d.getEventCtrl().setSelection(command);
								d.getEventCtrl().setSelection("Unlink");
								clearTimeout(T);
								T = setTimeout(function() {
									d.getEventCtrl().setSelection("removeformat")
								}, aa);
								if (Y.find(".fk-editor-vertical-rl").length < 1) {
									_EditorBase.getEventCtrl().setEditorAutoHeight(ac.moduleId)
								}
							}
							toolbutton.find("." + emphasize).removeClass(emphasizeShow).addClass(emphasizeHover);
							break;
						case BtnCommand.TextAlign:
							_EditTextAlignBtn.getEventCtrl().showTextAlignBtnPanel(ae);
							break;
						case BtnCommand.WritingMode:
							_EditWritingModeBtn.getEventCtrl().switchWritingMode(ae);
							_EditToolBase.getEventCtrl().animateHideToolSecondPanel(ac);
							x.getPreviewWindow().Mobi.simpleTextSetCgData(ac.moduleId);
							break;
						default:
							if (command == BtnCommand.Bold) {} else {
								if (command == BtnCommand.Italic) {}
							}
							d.getEventCtrl().setSelection(command);
							_EditToolBase.getEventCtrl().animateHideToolSecondPanel(ac);
							break
					}
					if (!ad.data(h.ClearSpanCursoring)) {
						ad.trigger("change");
						ad.data(h.ClearSpanCursoring, true);
						ad.find("span").css("cursor", "");
						setTimeout(function() {
							ad.data(h.ClearSpanCursoring, false)
						}, 300)
					}
					setTimeout(function() {
						if (command == BtnCommand.Underline || command == BtnCommand.Bold || command == BtnCommand.Italic ||
							command == BtnCommand.Removeformat) {
							_EditBtnBase.getEventCtrl().buttonEmphasize(ae)
						}
						if (r.trim(d.getEventCtrl().getSelectText(ad, true)).length > 0) {
							d.getEventCtrl().getSelectText(ad, false)
						}
					}, 100);
					needLogDog && _EditToolBase.getEventCtrl().editToolLogDog({
						module: Y,
						command: command
					});
					return N
				};
				S.constructor.prototype.toolButtonClickForBtnModuel = function(ae) {
					var aa = ae.option,
						ac = ae.editor,
						Z = ae.module,
						X = aa.moduleId,
						ag = X,
						V, af = ae.toolbar,
						Y = ae.thisBtnElement;
					toolbutton = af.find(".tool"), jqThisBtn = c.top.$(Y), command = jqThisBtn.attr("command"), colorBar = af.find(
						".tool-color ." + aa.css + "-tool-icon"), contentLink = c.top.Mobi.getModuleAttrPattern(ag).contentLink;
					d.getEventCtrl().setNodeRange(ac[0]);
					if (ac.not(":focus")) {
						ac.attr(z.Contenteditable, true).focus()
					}
					ac.data(h.PreCommand, command);
					switch (command) {
						case BtnCommand.Formats:
							_EditFormatsBtn.getEventCtrl().showFormatToolBar(ae);
							break;
						case BtnCommand.FontSize:
							_EditFontSizeBtn.getEventCtrl().showSizeToolBar(ae);
							break;
						case BtnCommand.Colors:
							_EditToolBase.getEventCtrl().animateHideToolSecondPanel(aa);

							function ab(ai, aj) {
								var ah = aj || ai;
								if (_EditColorBtn.getEventCtrl().checkColorIsWhite(ah)) {
									colorBar.css("border", "solid 1px #ccc")
								} else {
									colorBar.css("border", "0px")
								}
								colorBar.css("background", ah);
								contentLink.y = 1;
								contentLink.fct = 1;
								contentLink.c = ah;
								c.top.Mobi.getModuleAttrPattern(ag).changed = true;
								Z.find(".formMiddleContent" + ag).find("a").css("color", ah);
								x.styleChanged()
							}

							function ad(ai, ah) {
								if (ai == 2) {
									if (_EditColorBtn.getEventCtrl().checkColorIsWhite(ah)) {
										colorBar.css("border", "solid 1px #ccc")
									} else {
										colorBar.css("border", "0px")
									}
									colorBar.css("background", ah);
									contentLink.y = 1;
									contentLink.fct = 1;
									contentLink.c = ah;
									c.top.Mobi.getModuleAttrPattern(ag).changed = true;
									Z.find(".formMiddleContent" + ag).find("a").css("color", ah);
									x.styleChanged()
								}
							}
							var W = {
								moduleId: ag,
								target: colorBar,
								inputHexStatus: ad,
								onchange: ab,
								inFaiTop: true,
								left: -278,
								top: -12
							};
							jqThisBtn.faiColorPickerAlp(W);
							d.getEventCtrl().getWindowSelection().removeAllRanges();
							break;
						case BtnCommand.Underline:
							_EditToolBase.getEventCtrl().animateHideToolSecondPanel(aa);
							if (contentLink.d) {
								contentLink.d = 0;
								c.top.Mobi.getModuleAttrPattern(ag).changed = true;
								x.setModuleStyleCssList(ag, [{
									cls: ".formMiddleContent" + ag + " a",
									key: "text-decoration",
									value: "none"
								}, {
									cls: ".formMiddleContent" + ag + " .pagenation_N a span",
									key: "text-decoration",
									value: "none"
								}])
							} else {
								contentLink.y = 1;
								contentLink.d = 1;
								c.top.Mobi.getModuleAttrPattern(ag).changed = true;
								x.setModuleStyleCssList(ag, [{
									cls: ".formMiddleContent" + ag + " a",
									key: "text-decoration",
									value: "underline"
								}, {
									cls: ".formMiddleContent" + ag + " .pagenation_N a span",
									key: "text-decoration",
									value: "underline"
								}])
							}
							x.styleChanged();
							break;
						case BtnCommand.Bold:
							_EditToolBase.getEventCtrl().animateHideToolSecondPanel(aa);
							if (contentLink.b) {
								contentLink.b = 0;
								c.top.Mobi.getModuleAttrPattern(ag).changed = true;
								x.setModuleStyleCssList(ag, [{
									cls: ".formMiddleContent" + ag + " a",
									key: "font-weight",
									value: "normal"
								}])
							} else {
								contentLink.y = 1;
								contentLink.b = 1;
								c.top.Mobi.getModuleAttrPattern(ag).changed = true;
								x.setModuleStyleCssList(ag, [{
									cls: ".formMiddleContent" + ag + " a",
									key: "font-weight",
									value: "bold"
								}])
							}
							x.styleChanged();
							break;
						default:
							_EditToolBase.getEventCtrl().animateHideToolSecondPanel(aa);
							break
					}
					if (!ac.data(h.ClearSpanCursoring)) {
						ac.trigger("change");
						ac.data(h.ClearSpanCursoring, true);
						ac.find("span").css("cursor", "");
						setTimeout(function() {
							ac.data(h.ClearSpanCursoring, false)
						}, 300)
					}
					setTimeout(function() {
						if (command == BtnCommand.Underline || command == BtnCommand.Bold) {
							_EditBtnBase.getEventCtrl().buttonEmphasize(ae)
						}
					}, 100);
					_EditToolBase.getEventCtrl().editToolLogDog({
						module: Z,
						command: command
					});
					return N
				};
				S.constructor.prototype.selectChangeForBtnModuel = function(aa, V) {
					var Y = aa.option,
						Z = aa.editor,
						W = aa.module,
						ad = Y.moduleId,
						ac = c.top.Mobi.getModuleAttrPattern(ad).contentLink,
						X = V.command,
						ab = V.val;
					switch (X) {
						case BtnCommand.Formats:
							ac.y = 1;
							ac.f = ab;
							c.top.Mobi.getModuleAttrPattern(ad).changed = true;
							ab = ab.replace(/"/g, "");
							ab = ab.replace(/'/g, "");
							Z.css("font-family", ab);
							x.styleChanged();
							break;
						case BtnCommand.FontSize:
							Z.css("font-size", ab);
							ac.y = 1;
							ac.ls = ab.replace("px", "");
							c.top.Mobi.getModuleAttrPattern(ad).changed = true;
							x.styleChanged();
							break;
						case BtnCommand.EditContent:
							Z.focus(function() {
								r(this).css("white-space", "normal")
							}).focusout(function() {
								r(this).css("white-space", "nowrap")
							});
							W.find(".ui-resizable-handle").show();
							c.top.$(b).off("click.btnToolHide").on("click.btnToolHide", function() {
								if (!Z.attr(z.Contenteditable)) {
									W.unbind("mouseout.showResizable")
								}
							});
							W.bind("mouseout.showResizable", function() {
								W.find(".ui-resizable-handle").show()
							});
							break
					}
				}
			};
			return M = new O()
		};
		this.getUICtrl = function() {
			if (L) {
				return L
			}
			var O = function() {
				var P = this;
				P.constructor.prototype.createHoverBtnToolDom = function(R) {
					var V = R.option,
						T = R.btn,
						X = R.btnContent,
						S = [],
						U = V.tipTitle,
						W = "",
						Q = "";
					if (U) {
						Q = ' data-tip="' + T.title + '" '
					} else {
						W = ' title="' + T.title + '" '
					}
					S.push('<div command="' + T.command + '" class="tool f-tool editTool ' + T.className + '" role="button" ' + q +
						" " + W + " >");
					if (X) {
						S.push(X)
					} else {
						S.push("<a " + q + ' class="f-editToolIcon editToolIcon" command ="' + T.command + '" ' + Q + " ></a>")
					}
					S.push("</div>");
					return S
				};
				P.constructor.prototype.createBtnToolDom = function(S) {
					var W = S.option,
						V = S.btn,
						Q = S.toolContent,
						R = S.reSetUnselectable,
						U = [],
						T = q;
					if (R) {
						T = R
					}
					U.push('<div command="' + V.command + '" class="tool ' + V.cls + " " + V.className +
						'" role="button" data-tool="' + V.cls + '" ' + T + ' title="' + V.title + '">');
					if (!Q) {
						U.push("<a " + T + ' class="fkEditor-tool-icon"></a>')
					} else {
						U.push(Q)
					}
					if (typeof(V.emphasis) != g && V.emphasis) {
						U.push('<div class="' + W.css + "-tool-depressedNew " + W.css + '-tool-depressedNewHover"></div>')
					}
					U.push("</div>");
					return U
				}
			};
			return L = new O()
		}
	};
	_EditBtnBase = new G();
	var H = function() {
		var M;
		var L;
		var N = this;
		this.getEventCtrl = function() {
			if (M) {
				return M
			}
			var O = function() {
				var R = this,
					U, V, P, Q, T, S;
				R.constructor.prototype.bindToolAndEditorCreatedEvent = function(W) {
					_EditBtnBase.getEventCtrl().bindToolBtnEvent(W);
					R.bindToolBarEvent(W);
					_FkEditor.getEventCtrl().bindEditorEvent(W);
					return N
				};
				R.constructor.prototype.bindSimpleToolCreatedEvent = function(W) {
					_EditBtnBase.getEventCtrl().bindToolBtnEvent(W);
					R.bindToolBarEvent(W);
					return N
				};
				R.constructor.prototype.showToolBar = function(W) {
					var Z = W.option,
						Y = W.editor,
						X = W.module,
						aa = c.top.$("#fkEditor-toolBar-" + Z.moduleId);
					R.calcuToolBarPos(W);
					X.data(h.HoverToolOn, true);
					if (!Y.data(h.SimpleTextEdit)) {
						aa.find(".simpleTextEditTool").hide();
						aa.find(".simpleTextHoverTool").show();
						R.checkEditItemDisplay(W)
					}
				};
				R.constructor.prototype.calcuToolBarPos = function(ac) {
					return;
					var Z = ac.option,
						ab = ac.editor,
						af = c.top.$("#fkEditor-toolBar-" + Z.moduleId),
						X = _EditorBase.getEventCtrl().getModule({
							option: Z
						}),
						W = Z.btnModuleEdit,
						ah = 40,
						ag = W ? 12 : 6;
					var Y = r(X).offset().top;
					var ad = c.top.$("#webModuleContainer").offset();
					var ae, aa;
					af.css({
						left: 0,
						top: 0
					});
					if (ab.data(h.SimpleTextEdit)) {
						ah = parseInt(Z.Tool.height.replace("px", ""))
					} else {
						ah = parseInt(Z.HoverTool.height.replace("px", ""))
					}
					aa = ad.top + Y - ah - ag;
					ae = ad.left + X.offset().left;
					af.css({
						top: aa + "px",
						left: ae + "px"
					}).show().data(h.ModuleId, Z.moduleId);
					return N
				};
				R.constructor.prototype.calcuPanelPosForRight = function(ae) {
					var aa = ae.option,
						ac = ae.editor,
						af = c.top.$("#fkEditor-toolBar-" + aa.moduleId),
						Z = af.find(".simpleTextHoverTool .fkEditorBar"),
						ag = 38,
						W, ah, ad, X, ab = 2,
						Y = -2;
					if (af.data("fixRight")) {
						Z.each(function() {
							W = r(this).innerWidth();
							Y = 1;
							if (r(this).hasClass("borderPanel")) {
								ad = _EditBorderBtn._panelHeight
							} else {
								if (r(this).hasClass("opacityPanel")) {
									ad = _EditOpacityBtn._panelHeight
								} else {
									if (r(this).hasClass("shadowPanel")) {
										ad = _EditShadowBtn._panelHeight
									} else {
										if (r(this).hasClass("J_moduleNamePanel")) {
											ad = _EditModuleTitleBtn._panelHeight
										} else {
											if (r(this).hasClass("descPanel")) {
												ad = _EditDescribePicBtn._panelHeight
											}
										}
									}
								}
							}
							ah = -(W - ag);
							if (!isNaN(ad) && ad > 0) {
								r(this).css({
									top: (toolBarHeight) + "px",
									left: (ah - Y) + "px"
								})
							}
						})
					} else {
						af.find(".tool .slideDiv").removeClass("f-slideDiv-right")
					}
				};
				R.constructor.prototype.checkEditItemDisplay = function(X) {
					var Z = X.option,
						aa = X.toolbar,
						Y = aa.find(".tool-animation"),
						W, ab = Z.moduleId;
					if (typeof Z.animationStatusFun == "function" && Z.animationStatusFun(ab) == 1) {
						Y.show();
						W = Z.HoverTool.animationShowWidth
					} else {
						Y.hide();
						W = Z.HoverTool.width
					}
					return N
				};
				R.constructor.prototype.initModuleNameBtnInSidePos = function(ab) {
					var aa = _EditorBase.getEventCtrl().getModule({
							option: ab
						}),
						ad = aa.parent().attr("id"),
						ac = aa.attr("_side"),
						X = toolbar.find(".tool-edit-name"),
						Z, W, Y;
					if (ac == 1) {
						Z = X.offset().left;
						if (ad == "floatLeftTopForms" || ad == "floatLeftBottomForms") {
							Y = -Z
						} else {
							if (ad == "floatRightTopForms" || ad == "floatRightBottomForms") {
								W = toolbar.offset().left;
								Y = W - Z - 33
							}
						}
						X.find(".J_moduleNamePanel").css("left", Y + "px")
					}
					return N
				};
				R.constructor.prototype.bindToolBarEvent = function(W) {
					var Z = W.option,
						X = W.module,
						Y = W.editor,
						aa = W.toolbar;
					aa.addClass("editorHoverShowTool").unbind("mouseover.hoverShowTool").bind("mouseover.hoverShowTool", function(
						ab) {
						if (_EditorBase.getEventCtrl().checkEditorEditable(W)) {
							X.data(h.HoverToolOn, true).trigger("mouseover");
							aa.show().data(h.ModuleId, Z.moduleId)
						}
						clearTimeout(Y.data(h.HoverToolTimeout));
						clearTimeout(Y.data(h.EditLineTimeout));
						X.mouseenter()
					}).unbind("mouseleave.hoverShowTool").bind("mouseleave.hoverShowTool", function(ab) {
						if (X.find(".fk-editor-vertical-rl").length < 1) {
							X.trigger("mouseleave")
						}
						X.data(h.HoverToolOn, false)
					}).off("click.hoverShowTool").on("click.hoverShowTool", function(ab) {
						ab.stopPropagation()
					});
					if (!Z.simpleTool) {
						aa.find(".simpleTextEditTool").not(".tool").off("click.notBtnClick").on("click.notBtnClick", function() {
							_EditToolBase.getEventCtrl().animateHideToolSecondPanel(Z);
							if (typeof(Y.data(h.Range)) != g) {
								d.getEventCtrl().setSelectRange(Y.data(h.Range))
							}
							return false
						})
					}
				};
				R.constructor.prototype.deleteToolWrapDom = function(X, W) {
					var Y = 1000;
					if (!W) {
						return N
					}
					setTimeout(function() {
						var Z = W;
						var aa = X;
						if (!Z.is(":visible")) {
							r(b).unbind("mouseup.fkTool" + aa.moduleId);
							R.deleteOrHideToolBar(aa)
						}
					}, Y);
					return N
				};
				R.constructor.prototype.deleteOrHideToolBar = function(Y) {
					var Z = c.top.$("#" + Y.css + "-toolBar-" + Y.moduleId),
						W = _EditorBase.getEventCtrl().getModule({
							option: Y
						}),
						X = W.find("." + Y.css);
					if (typeof(Z) != g) {
						if (Y.isHideToolBar) {
							Z.hide()
						} else {
							Z.remove()
						}
					}
					if (typeof(W) != g && !Y.simpleTool) {
						if (B.getSelection) {
							B.getSelection().removeAllRanges()
						}
						fkEditorLine = W.find(".fk-editor-line");
						if (fkEditorLine.hasClass("fk-editor-bd")) {
							fkEditorLine.addClass("fk-editor-bdNone");
							fkEditorLine.removeClass("fk-editor-bd")
						}
						if (W.find(".ui-resizable-handle").length) {
							W.find(".ui-resizable-handle").hide()
						}
						if (r.trim(X.text()).length <= 0) {
							X.html('<div class="editTip">双击输入内容...</div>')
						}
					}
				};
				R.constructor.prototype.animateHideToolSecondPanel = function(ad, af) {
					var ai = c.top.$("#" + ad.css + "-toolBar-" + ad.moduleId),
						ak, ae, aj, Y, ac, al, ab, X, aa, ah, Z, ag = 200,
						W = 20;
					if (af != BtnCommand.GlobalLink) {
						ak = ai.find(".tool-link").find("." + ad.css + "-linkSlideBar");
						if (ak.height() > 0) {
							ak.removeClass("linkPanelSlide");
							clearTimeout(S)
						}
					}
					if (af != BtnCommand.Opacity) {
						ae = ai.find(".tool-opacity").find(".opacityPanel");
						if (ae.height() > 0) {
							ae.removeClass("f-opacityPanel-show")
						}
					}
					if (af != BtnCommand.Border) {
						aj = ai.find(".tool-border").find(".borderPanel");
						if (aj.height() > 0) {
							aj.removeClass("f-borderPanel-show")
						}
					}
					if (af != BtnCommand.Shadow) {
						Y = ai.find(".tool-shadow").find(".shadowPanel");
						if (Y.height() > 0) {
							Y.removeClass("f-shadowPanel-show")
						}
					}
					if (af != BtnCommand.Formats) {
						ac = ai.find(".tool-formats").find("." + ad.css + "-formatBar");
						if (ac.height() > 0) {
							clearTimeout(V);
							ac.removeClass("formatBarSlideDown");
							V = setTimeout(function() {
								ac.parent().find(".fkEditor-tool-iconNew").removeClass("edTriangleOnNew")
							}, ag)
						}
					}
					if (af != BtnCommand.FontSize) {
						al = ai.find(".tool-fontSize").find("." + ad.css + "-formatBar");
						if (al.height() > 0) {
							ab = ai.find(".tool-fontSize").find(".selectDiv");
							ab.find("span").attr(z.Contenteditable, false);
							d.getEventCtrl().getWindowSelection().removeAllRanges();
							al.removeClass("formatBarSlideDown");
							clearTimeout(U);
							U = setTimeout(function() {
								ab.find("span").html(ab.find("span").attr("_value") + "px");
								al.parent().find(".fkEditor-tool-iconNew").removeClass("edTriangleOnNew")
							}, ag)
						}
					}
					if (af != BtnCommand.LineHeight) {
						X = ai.find(".tool-lineHeight").find("." + ad.css + "-formatBar");
						if (X.height() > 0) {
							aa = ai.find(".tool-lineHeight").find(".selectDiv");
							aa.find("span").attr(z.Contenteditable, false);
							d.getEventCtrl().getWindowSelection().removeAllRanges();
							X.removeClass("formatBarSlideDown");
							clearTimeout(P);
							P = setTimeout(function() {
								aa.addClass("selectDivNew");
								aa.find("span").html("");
								X.parent().find(".fkEditor-tool-iconNew").removeClass("edTriangleOnNew")
							}, ag)
						}
					}
					if (af != BtnCommand.TextAlign) {
						ah = ai.find(".tool-textAlign").find("." + ad.css + "-formatBar");
						if (ah.height() > 0) {
							Z = ai.find(".tool-textAlign").find(".selectDiv");
							ah.removeClass("formatBarSlideDown textAlignSlideDown");
							clearTimeout(T);
							T = setTimeout(function() {
								Z.addClass("selectDivNew");
								ah.parent().find(".fkEditor-tool-iconNew").removeClass("edTriangleOnNew")
							}, ag)
						}
					}
					if (c.top.$(".J_faiColorPickerAlp").is(":visible")) {
						c.top.$(".J_faiColorPickerAlp").slideUp(ag)
					}
					return N
				};
				R.constructor.prototype.isShowHoverToolPanel = function(X) {
					var W = false;
					if (X.find(".tool-link").find(".fkEditor-linkSlideBar").height() > 0) {
						W = true
					}
					if (X.find(".tool-opacity").find(".opacityPanel").height() > 0) {
						W = true
					}
					if (X.find(".tool-border").find(".borderPanel").height() > 0) {
						W = true
					}
					if (X.find(".tool-shadow").find(".shadowPanel").height() > 0) {
						W = true
					}
					if (X.find(".setRadiusBar").data("radiusSliding")) {
						W = true
					}
					return W
				};
				R.constructor.prototype.bindSliderInputEvent = function(W, Y) {
					var aa, Z, X;
					X = function(ad) {
						var ah, af, ag;
						ah = {
							onChange: function() {},
							maxVal: 100,
							per: "%",
							minVal: 0,
							maxLength: 3
						};
						ad = r.extend({}, ah, ad);
						af = function() {
							this.cache = []
						};
						af.prototype.add = function(au, at, aq) {
							var ao = this;
							for (var ap = 0, ar; ar = at[ap++];) {
								(function(aw) {
									var av = aw.split(":");
									ao.cache.push(function() {
										var ax = av.shift();
										av.unshift(au);
										av.push(aq);
										return ag[ax].apply(au, av)
									})
								})(ar)
							}
						};
						af.prototype.start = function() {
							for (var ao = 0, ap; ap = this.cache[ao++];) {
								var aq = ap();
								if (aq) {
									return aq
								}
							}
						};
						ag = {
							isNumberKey: function(ao, ap) {
								if (!top.Fai.isNumberKey(ao._event)) {
									return ap
								}
							},
							maxLength: function(ao, aq, ap) {
								if (ao._length >= aq) {
									return ap
								}
							},
							maxVal: function(ao, aq, ap) {
								if (ao._value > aq) {
									ak(ao, aq);
									d.getEventCtrl().popCursorLastDiv(ao);
									ao.focus();
									return ap
								}
							},
							minVal: function(ap, ao, aq) {
								if (ap._value < ao) {
									return aq
								}
							},
							isEditable: function(ao, ap) {
								if (ao.hasClass("J_contentEditable contentEditable")) {
									return ap
								}
							}
						};

						function an(ao, ap) {
							ap ? ao.attr("contenteditable", ap).addClass("J_contentEditable contentEditable") : ao.removeAttr(
								"contenteditable").removeClass("J_contentEditable contentEditable")
						}

						function ak(ao, aq, ap) {
							ao.html(aq + (ap || ""))
						}

						function ai(ao) {
							return parseInt(ao.html().replace(ad.per, "") || 0) || 0
						}

						function aj(ao, ap) {
							ao._value = ai(ao);
							ao._length = ao.html().length;
							ao._event = ap
						}

						function al(ao, ar) {
							var ap = new af();
							ap.add(ao, ["isEditable"], "可编辑状态中");
							var aq = ap.start();
							if (aq) {
								return aq
							}
							an(ao, true);
							ao.html(ai(ao));
							d.getEventCtrl().setNodeRange(ao[0]);
							if (top.Fai.isMozilla()) {
								ao.focus()
							}
						}

						function ae(ao, ar) {
							var ap = new af();
							aj(ao, ar);
							ap.add(ao, ["isNumberKey"], "请输入数字");
							ap.add(ao, ["maxLength:" + ad.maxLength], "数字已达最大长度");
							var aq = ap.start();
							if (aq) {
								return false
							}
						}

						function ab(ao, ar) {
							var ap = new af();
							aj(ao, ar);
							ap.add(ao, ["maxVal:" + ad.maxVal], "超过最大值");
							var aq = ap.start();
							ac(ao, ar);
							if (aq) {
								return aq
							}
						}

						function ac(ao, ar) {
							var ap = new af();
							aj(ao, ar);
							ap.add(ao, ["minVal:" + ad.minVal], "小于最小值");
							var aq = ap.start();
							var at = ai(ao);
							if (aq) {
								at = ad.minVal
							}
							ad.onChange(at)
						}

						function am(ao, ar) {
							var ap = new af();
							aj(ao, ar);
							ap.add(ao, ["minVal:" + ad.minVal], "小于最小值");
							var aq = ap.start();
							var at = ai(ao);
							if (aq) {
								at = ad.minVal
							}
							ak(ao, at, ad.per);
							an(ao, false)
						}
						return {
							click: al,
							keypress: ae,
							keyup: ab,
							blur: am
						}
					};
					aa = function() {
						var ac = ["click", " keypress", " keyup", " blur", ""],
							ab = ".sliderInput";
						W.off(ab).on(ac.join(ab), function(ad) {
							ad.stopPropagation();
							return X(Y)[ad.type](r(this), ad)
						})
					};
					Z = function() {
						W.length && aa();
						return W
					};
					return Z()
				};
				R.constructor.prototype.editToolBarMask = function(aa, X) {
					var Z = "";
					var W = {
							id: aa,
							useClass: true,
							leftClass: "fk-dialog-hidden-mask",
							rightClass: "fk-dialog-hidden-mask",
							topClass: "fk-dialog-hidden-mask",
							bottomClass: "fk-dialog-hidden-mask",
							centerClass: "fk-dialog-center-mask",
							extFn: [{
								name: "click.dialogmask",
								fn: function() {
									R.removeToolBarDialog(aa, X)
								}
							}]
						},
						Y = c.top.$("#fkEditor-toolBar-" + aa);
					R.addModuleMask(W);
					r(".moduleMask").off("mousewheel.disabledScroll").on("mousewheel.disabledScroll", function(ab) {
						if (c.top.$(".simpleTextEditTool:visible").length > 0 || R.isShowHoverToolPanel(Y)) {
							ab.preventDefault()
						}
					});
					r(B).off("mousewheel.disabledScroll").on("mousewheel.disabledScroll", function(ab) {
						clearTimeout(Z);
						Z = setTimeout(function() {
							R.addModuleMask(W)
						}, 200)
					})
				};
				R.constructor.prototype.addModuleMask = function(an) {
					return;
					var ah = {};
					ah.lt = {
						x: 0,
						y: 0
					};
					ah.lb = {
						x: 0,
						y: 0
					};
					ah.rt = {
						x: 0,
						y: 0
					};
					ah.rb = {
						x: 0,
						y: 0
					};
					var aG = {
						id: 0,
						refresh: false,
						useClass: false,
						leftClass: "",
						rightClass: "",
						topClass: "",
						bottomClass: "",
						centerClass: "",
						enableTopBar: false,
						callback: false,
						extFn: []
					};
					r.extend(aG, an);
					var Z = r("#module" + aG.id);
					if (Z.length < 1) {
						return
					}
					var W = c.top.$(".moduleMaskContainer");
					if (W.length < 1 && an.refresh) {
						return
					}
					var aA = r("body").outerWidth();
					var ae = r("body").outerHeight();
					var am = c.top.$("#webModuleContainer").offset();
					var ao = c.top.$("body").outerWidth();
					var au = c.top.$("body").outerHeight();
					var aH = 0;
					var ag = Z.outerWidth();
					var aB = Z.outerHeight();
					var ap = Z.offset();
					var Y = ap.top - aH;
					var ai = ap.left;
					var aD = Y + aB;
					var ay = ai + ag;
					var af = 0;
					ah.lt.x = ai + am.left;
					ah.lt.y = Y + am.top;
					ah.lb.x = ah.lt.x;
					ah.lb.y = (aD > ae ? ae : aD) + am.top;
					ah.rt.x = (ay > aA ? aA : ay) + am.left;
					ah.rt.y = ah.lt.y;
					ah.rb.x = ah.rt.x;
					ah.rb.y = ah.lb.y;
					var ab = "position:absolute;top:" + af + "px;left:0;width:" + ah.lt.x + "px;height:" + au + "px;";
					var aF = "position:absolute;top:" + af + "px;left:" + ah.rt.x + "px;width:" + (ao - ah.rt.x) + "px;height:" +
						au + "px;";
					var X = "position:absolute;top:" + af + "px;left:" + ah.lt.x + "px;width:" + ag + "px;height:" + (ah.lt.y -
						af) + "px;";
					var ak = "position:absolute;top:" + ah.lb.y + "px;left:" + ah.lb.x + "px;width:" + ag + "px;height:" + (au -
						ah.lb.y) + "px;";
					var ax = "position:absolute;top:" + ah.lt.y + "px;left:" + ah.lt.x + "px;width:" + ag + "px;height:" + aB +
						"px;";
					if (W.length > 0) {
						var ad = W;
						var aC = ad.children(".moduleMask-left");
						var aa = ad.children(".moduleMask-right");
						var at = ad.children(".moduleMask-top");
						var av = ad.children(".moduleMask-bottom");
						var aw = ad.children(".moduleMask-center");
						aC.attr("style", ab);
						aa.attr("style", aF);
						at.attr("style", X);
						av.attr("style", ak);
						aw.attr("style", ax);
						if (!!ad.attr("useClass")) {
							aC.removeClass().addClass("moduleMask moduleMask-left");
							aa.removeClass().addClass("moduleMask moduleMask-right");
							at.removeClass().addClass("moduleMask moduleMask-top");
							av.removeClass().addClass("moduleMask moduleMask-bottom");
							aw.removeClass().addClass("moduleMask moduleMask-center")
						}
						if (aG.useClass) {
							aC.addClass(" " + aG.leftClass);
							aa.addClass(" " + aG.rightClass);
							at.addClass(" " + aG.topClass);
							av.addClass(" " + aG.bottomClass);
							aw.addClass(" " + aG.centerClass)
						}
						ad.attr("useClass", aG.useClass ? 1 : 0);
						ad.appendTo(c.top.$("body"))
					} else {
						var aq = [];
						aq.push("<div class='moduleMaskContainer' useClass='" + (aG.useClass ? 1 : 0) + "'>");
						aq.push(" <div class='moduleMask moduleMask-left " + (aG.useClass ? aG.leftClass : "") + "' style='" + ab +
							"'></div>");
						aq.push(" <div class='moduleMask moduleMask-right " + (aG.useClass ? aG.rightClass : "") + "' style='" + aF +
							"'></div>");
						aq.push(" <div class='moduleMask moduleMask-top " + (aG.useClass ? aG.topClass : "") + "' style='" + X +
							"'></div>");
						aq.push(" <div class='moduleMask moduleMask-bottom " + (aG.useClass ? aG.bottomClass : "") + "' style='" +
							ak + "'></div>");
						aq.push(" <div class='moduleMask moduleMask-center " + (aG.useClass ? aG.centerClass : "") + "' style='" +
							ax + "'></div>");
						aq.push("</div>");
						c.top.$("body").append(aq.join(""))
					}
					W = c.top.$(".moduleMaskContainer");
					if (!aG.refresh) {
						var ac = W.data("extFn");
						if (ac) {
							for (var aE = 0, aj = ac.length; aE < aj; aE++) {
								var az = ac[aE].obj || W;
								var al = ac[aE].name;
								az.off(al)
							}
						}
					}
					if (aG.extFn.length > 0) {
						for (var aE = 0, aj = aG.extFn.length; aE < aj; aE++) {
							var az = aG.extFn[aE].obj || W;
							var al = aG.extFn[aE].name;
							var ar = aG.extFn[aE].fn;
							az.off(al);
							az.on(al, ar)
						}
						W.data("extFn", aG.extFn)
					}
					if (aG.callback) {
						aG.callback()
					}
				};
				R.constructor.prototype.removeModuleMask = function() {
					var Y = c.top.$(".moduleMaskContainer");
					var ab = Y.data("extFn");
					if (ab) {
						for (var aa = 0, X = ab.length; aa < X; aa++) {
							var W = ab[aa].obj || Y;
							var Z = ab[aa].name;
							W.off(Z)
						}
					}
					Y.remove()
				};
				R.constructor.prototype.removeToolBarDialog = function(X, W) {
					R.checkSimpleTextHideTool(X);
					if (c.top.$(".moduleMaskContainer").length > 0) {
						R.removeModuleMask()
					}
				};
				R.constructor.prototype.hideToolBarMask = function() {
					var W = c.top.$(".fk-dialog-hidden-mask");
					if (W.length > 0) {
						R.removeModuleMask()
					}
				};
				R.constructor.prototype.checkSimpleTextHideTool = function(Y) {
					if (x.getPreviewWindow().Mobi.simpleTextList.checking != false) {
						return
					}
					x.getPreviewWindow().Mobi.simpleTextList.checking = true;
					var Y = Y,
						aa, af, ak, ai = "",
						ab, al, W, aj, ah = 300,
						ag, ac, am = false,
						ad = false,
						X = false,
						ae, Z;
					aa = r("#module" + Y);
					if (aa.hasClass("formStyle53")) {
						af = aa
					} else {
						if (aa.hasClass("formStyle54")) {
							af = aa.find("#module" + Y + "FlBtn")
						} else {
							af = aa.find("#fkEditor-" + Y)
						}
					}
					ae = af.data("option");
					am = af.attr("contenteditable");
					ad = aa.data("hoverToolOn");
					X = aa.data("mousedown");
					ak = c.top.$("#fkEditor-toolBar-" + Y);
					if (_EditToolBase.getEventCtrl().isShowHoverToolPanel(ak)) {
						!!ae && _EditToolBase.getEventCtrl().deleteOrHideToolBar(ae);
						aa.data(h.Mousedown, false)
					}
					if (!ad && !X && (am == "true")) {
						Z = ak.find(".simpleTextHoverTool");
						ab = ak.find(".tool-formats").find(".fkEditor-formatBar");
						al = ak.find(".tool-fontSize").find(".fkEditor-formatBar");
						fsizebarTextDiv = ak.find(".tool-fontSize").find(".selectDiv");
						W = ak.find(".tool-lineHeight").find(".fkEditor-formatBar");
						lhbarTextDiv = ak.find(".tool-lineHeight").find(".selectDiv");
						ag = ak.find(".tool-textAlign").find(".fkEditor-formatBar");
						ai = x.getPreviewWindow().Mobi.simpleTextList.colorToolShow;
						if (Z.is(":visible") || ab.height() > 0 || al.height() > 0 || W.height() > 0 || ag.height() > 0 || ai) {
							_EditToolBase.getEventCtrl().animateHideToolSecondPanel(af.data("option"))
						} else {
							_EditToolBase.getEventCtrl().deleteOrHideToolBar(af.data("option"))
						}
					}
					aa.data(h.Mousedown, false);
					setTimeout(function() {
						x.getPreviewWindow().Mobi.simpleTextList.checking = false
					}, 300)
				};
				R.constructor.prototype.hideHoverTool = function(W) {
					var Y = W.option,
						X = W.editor,
						Z = c.top.$("#fkEditor-toolBar-" + Y.moduleId);
					if (X.data(h.SimpleTextEdit)) {
						return
					}
					if (_EditToolBase.getEventCtrl().isShowHoverToolPanel(Z)) {
						return
					}
					if (c.top.$(".popupBg").length <= 0) {
						_EditToolBase.getEventCtrl().deleteOrHideToolBar(Y)
					} else {
						Y.isHideToolBar = true;
						_EditToolBase.getEventCtrl().deleteOrHideToolBar(Y);
						Y.isHideToolBar = false
					}
				};
				R.constructor.prototype.buildSimpleTip = function(W, Y) {
					if (Y == 0) {
						X("f-button-tip-vertical", "f-button-top")
					} else {
						if (Y == 1) {
							X("f-button-tip-vertical", "f-button-bottom")
						} else {
							if (Y == 2) {
								X("f-button-tip-horizontal", "f-button-left")
							} else {
								if (Y == 3) {
									X("f-button-tip-horizontal", "f-button-right")
								}
							}
						}
					}

					function X(Z, aa) {
						var ab =
							"f-button-tip-vertical f-button-top f-button-bottom f-button-tip-horizontal f-button-right f-button-left";
						W.off("mouseenter.tips").on("mouseenter.tips", function() {
							var ac = r(this).attr("data-tip");
							if (!ac) {
								return
							}
							r(this).addClass(Z + " " + aa)
						}).off("mouseleave.tips").on("mouseleave.tips", function() {
							r(this).removeClass(ab)
						})
					}
				};
				R.constructor.prototype.hideSimpleTip = function(W) {
					W.removeClass("f-button-tip-vertical").removeClass("f-button-bottom").removeClass("f-button-tip")
				};
				R.constructor.prototype.editToolLogDog = function(W) {
					var X = W.module,
						Y = W.command;
					if (!X) {
						return
					}
					if (X.hasClass("formStyle54")) {
						switch (Y) {
							case BtnCommand.BtnModuleStyle:
								x.logDog(200310, 1);
								break;
							case BtnCommand.Dblclick:
								x.logDog(200310, 2);
								break;
							case BtnCommand.EditContent:
								x.logDog(200310, 3);
								break;
							case BtnCommand.GlobalLink:
								x.logDog(200310, 4);
								break;
							case BtnCommand.Opacity:
								x.logDog(200310, 5);
								break;
							case BtnCommand.Border:
								x.logDog(200310, 6);
								break;
							case BtnCommand.Shadow:
								x.logDog(200310, 7);
								break;
							case BtnCommand.Delete:
								x.logDog(200310, 8);
								break;
							default:
								break
						}
					} else {
						if (X.hasClass("formStyle52")) {
							switch (Y) {
								case BtnCommand.EditContent:
									x.logDog(200286, 1);
									break;
								case BtnCommand.GlobalLink:
									x.logDog(200286, 3);
									break;
								case BtnCommand.Delete:
									x.logDog(200286, 4);
									break;
								case BtnCommand.Colors:
									x.logDog(200286, 5);
									break;
								case BtnCommand.Bold:
									x.logDog(200286, 6);
									break;
								case BtnCommand.Italic:
									x.logDog(200286, 7);
									break;
								case BtnCommand.Underline:
									x.logDog(200286, 8);
									break;
								case BtnCommand.Formats:
									x.logDog(200286, 9);
									break;
								case BtnCommand.FontSize:
									x.logDog(200286, 10);
									break;
								case BtnCommand.WritingMode:
									x.logDog(200286, 13);
									break;
								case BtnCommand.LineHeight:
									x.logDog(200286, 14);
									break;
								case BtnCommand.TextAlign:
									x.logDog(200286, 17);
									break;
								case BtnCommand.JustifyLeft:
									x.logDog(200286, 18);
									break;
								case BtnCommand.JustifyCenter:
									x.logDog(200286, 19);
									break;
								case BtnCommand.JustifyRight:
									x.logDog(200286, 20);
									break;
								case BtnCommand.SingleClick:
									x.logDog(200286, 21);
									break;
								case BtnCommand.Dblclick:
									x.logDog(200286, 22);
									break;
								case BtnCommand.Linkcreator:
									x.logDog(200286, 23);
									break;
								case BtnCommand.DeleteLink:
									x.logDog(200286, 24);
									break;
								case BtnCommand.InputFontSize:
									x.logDog(200286, 25);
									break;
								case BtnCommand.InputLineHeight:
									x.logDog(200286, 26);
									break;
								case BtnCommand.ChooseFormats:
									x.logDog(200286, 27);
									break;
								case BtnCommand.ChooseLineHeight:
									x.logDog(200286, 28);
									break;
								case BtnCommand.JustifyFull:
									x.logDog(200286, 30);
									break;
								default:
									break
							}
						} else {
							if (X.hasClass("formStyle53")) {
								switch (Y) {
									case BtnCommand.EditPhotoBtn:
										x.logDog(200308, 1);
										break;
									case BtnCommand.PhotoShapeBtn:
										x.logDog(200308, 3);
										break;
									case BtnCommand.Opacity:
										x.logDog(200308, 5);
										break;
									case BtnCommand.GlobalLink:
										x.logDog(200308, 4);
										break;
									case BtnCommand.Delete:
										x.logDog(200308, 6);
										break;
									case BtnCommand.Dblclick:
										x.logDog(200308, 2);
										break;
									default:
										break
								}
							}
						}
					}
				}
			};
			return M = new O()
		};
		this.getUICtrl = function() {
			if (L) {
				return L
			}
			var O = function() {
				var Q = this,
					P, R = "J_fkSingleTool";
				Q.constructor.prototype.creatButtonsList = function(X) {
					var V = X.option,
						Y = X.buttons,
						Z = X.toolbar,
						aa = Z.find(".simpleTextEditTool"),
						W = [],
						T, S = "moduleName";
					if (aa.children().length > 0) {
						return
					}
					for (var U = 0; U < Y.length; U++) {
						T = Y[U];
						X.btn = T;
						if (T[S] == "EditBreakLineBtn") {
							W.push(_EditBreakLineBtn.getUICtrl().createHoverBtnToolDom().join(""))
						}
						_EditBreakLineBtn
					}
					aa.append(W.join(""));
					return N
				};
				Q.constructor.prototype.creatHoverButtonsList = function(aa) {
					var Y = aa.option,
						W = aa.hoverShowButtons,
						ac = aa.toolbar,
						T = ac.find(".simpleTextHoverTool"),
						Z = [],
						V, S = "moduleName",
						ab, U = Y.tipTitle;
					if (T.children().length > 0) {
						return N
					}
					for (var X = 0; X < W.length; X++) {
						V = W[X];
						aa.btn = V;
						if (V[S] == "EditContentBtn") {
							Z.push(_EditContentBtn.getUICtrl().createHoverBtnToolDom(aa).join(""))
						}
						if (V[S] == "EditAnimationBtn") {
							Z.push(_EditAnimationBtn.getUICtrl().createHoverBtnToolDom(aa).join(""))
						}
						if (V[S] == "EditBtnModuleStyleBtn") {
							Z.push(_EditBtnModuleStyleBtn.getUICtrl().createHoverBtnToolDom(aa).join(""))
						}
						if (V[S] == "EditPhotoBtn") {
							Z.push(_EditPhotoBtn.getUICtrl().createHoverBtnToolDom(aa).join(""))
						}
						if (V[S] == "EditImgEffectBtn") {
							Z.push(_EditImgEffectBtn.getUICtrl().createHoverBtnToolDom(aa).join(""))
						}
						if (V[S] == "EditPhotoShapeBtn") {
							Z.push(_EditPhotoShapeBtn.getUICtrl().createHoverBtnToolDom(aa).join(""))
						}
						if (V[S] == "EditSimpleLinkBtn") {
							Z.push(_EditSimpleLinkBtn.getUICtrl().createHoverBtnToolDom(aa).join(""))
						}
						if (V[S] == "EditOpacityBtn") {
							Z.push(_EditOpacityBtn.getUICtrl().createHoverBtnToolDom(aa).join(""))
						}
						if (V[S] == "EditBorderBtn") {
							Z.push(_EditBorderBtn.getUICtrl().createHoverBtnToolDom(aa).join(""))
						}
						if (V[S] == "EditShadowBtn") {
							Z.push(_EditShadowBtn.getUICtrl().createHoverBtnToolDom(aa).join(""))
						}
						if (V[S] == "EditGlobalLinkBtn") {
							Z.push(_EditGlobalLinkBtn.getUICtrl().createHoverBtnToolDom(aa).join(""))
						}
						if (V[S] == "EditDeleteBtn") {
							Z.push(_EditDeleteBtn.getUICtrl().createHoverBtnToolDom(aa).join(""))
						}
						if (V[S] == "EditSeperatorBtn") {
							Z.push(_EditSeperatorBtn.getUICtrl().createHoverBtnToolDom().join(""))
						}
					}
					T.append(Z.join(""));
					if (U) {
						ab = T.find(".tool .editToolIcon");
						N.getEventCtrl().buildSimpleTip(ab, 0)
					}
					return N
				};
				Q.constructor.prototype.buildToolWrapDom = function(T) {
					var W = T.option,
						X, V = T.editor,
						S = [],
						U = 6,
						Y;
					if (!W.moduleId || W.moduleId <= 0) {
						console.log("buildToolWrapDom moduleId err, option.moduleId = " + W.moduleId);
						return P
					}
					P = c.top.$("#" + W.css + "-toolBar-" + W.moduleId);
					Y = r("." + R);
					if (Y.length > 0) {
						N.getEventCtrl().deleteToolWrapDom(Y.data(h.Option), Y)
					}
					W.btnModuleEdit && (U += 6);
					S.push('<div id="' + W.css + "-toolBar-" + W.moduleId + '" role="toolbar" class="J_fkEditor_tool ' + R + " " +
						W.css + " " + W.toolExtClasses + " " + W.css + "-tool " + W.css + 'DefHeight">');
					S.push('<div style="display:none;"><input maxlength="255" id="simpleTextLinkInputVal-' + W.moduleId +
						'"></input></div>');
					S.push('<div class="simpleTextHoverTool"></div>');
					S.push('<div class="simpleTextEditTool" style="display:none;"></div>');
					S.push('<div class="simpleTextCover f-simpleTextCover"></div>');
					S.push("</div>");
					c.top.$("body").append(S.join(""));
					P = c.top.$("#" + W.css + "-toolBar-" + W.moduleId);
					P.data(h.Option, W);
					return P
				}
			};
			return L = new O()
		}
	};
	_EditToolBase = new H();
	var C = function() {
		var M;
		var L;
		var N = this;
		this.getEventCtrl = function() {
			if (M) {
				return M
			}
			var O = function() {
				var Q = this,
					S, P, R;
				Q.constructor.prototype.getModule = function(T) {
					var V = T.option;
					var U = "";
					if (V.systemModule && V.systemModule != "") {
						U = r("#" + V.systemModule);
						V.moduleId = V.systemModule
					} else {
						if (V.moduleId == "null" || V.moduleId == 0) {
							return
						}
						U = r("#module" + V.moduleId)
					}
					return U
				};
				Q.constructor.prototype.stopBannerJump = function(U) {
					var V = U.clickEvent,
						T = r(V.target).parentsUntil("#bannerV2", ".J_bannerItem");
					if (T.length) {
						href = T.attr("href");
						target = T.attr("target");
						T.attr("href", "javascript:void(0);").attr("target", "");
						V.stopPropagation();
						setTimeout(function() {
							T.attr("href", href).attr("target", target)
						}, 0)
					}
				};
				Q.constructor.prototype.logEditorSingleClick = function(T) {
					var V = T.editor,
						U = T.module;
					if (r(this).attr(z.Contenteditable) != "true") {
						clearTimeout(R);
						R = setTimeout(function() {
							if (V.attr(z.Contenteditable) != "true") {
								_EditToolBase.getEventCtrl().editToolLogDog({
									module: U,
									command: BtnCommand.SingleClick
								})
							}
						}, 300)
					}
				};
				Q.constructor.prototype.setEidtorSelectedRule = function(U) {
					var V = U.editor,
						W = U.command,
						T = false;
					if (V.text().length <= 0) {
						return
					}
					if (d.getEventCtrl().getSelectText(V, true).length <= 0) {
						if (V.data(h.HasRefreshClick)) {
							d.getEventCtrl().setNodeRange(V[0]);
							T = true
						} else {
							if (W != "colors" && W != "fSize" && W != "lineHeight") {
								d.getEventCtrl().setSelectRange(V.data(h.Range));
								T = true
							}
						}
					}
					clearTimeout(P);
					P = setTimeout(function() {
						var X = V.data(h.SignClassNum),
							Z = V.find("." + V.data(h.EditSignClass) + X);
						if (V.data(h.HasRefreshClick) || Z.length <= 0) {
							var Y = d.getEventCtrl().getSelectText(V, true).length > 0;
							V.data(h.HasSelectText, Y);
							if (Y) {
								d.getEventCtrl().setTagStyle({
									styleName: "xxxx",
									styleValue: "",
									editor: V,
									notCreateNewNode: false
								})
							}
						}
						if (T) {
							d.getEventCtrl().getSelectText(V, false)
						}
					}, 100)
				};
				Q.constructor.prototype.bindAllEvent = function(U) {
					var Y = U.option,
						V = U.module,
						X = U.editor,
						Z, T = U.fkEditorWrap,
						W = "mouseup.fkTool" + Y.moduleId;
					V.unbind("mouseenter.fkModuleEvent").bind("mouseenter.fkModuleEvent", function(af) {
						var aa = r(this).offset().top - 0;
						if (aa < 0) {
							return
						}
						clearTimeout(X.data(h.EditLineTimeout));
						var ae = r(this).find(".fk-editor-line");
						if (ae.hasClass("fk-editor-bdNone")) {
							ae.addClass("fk-editor-bd");
							ae.removeClass("fk-editor-bdNone")
						}
						clearTimeout(X.data(h.HoverToolTimeout));
						var ad = c.top.$("#" + Y.css + "-toolBar-" + Y.moduleId),
							ac, ab;
						U.toolbar = ad;
						if (ad.length < 1) {
							ac = _EditBtnBase.getEventCtrl().getButtonsData(U);
							U.buttons = ac;
							ab = _EditBtnBase.getEventCtrl().getHoverShowButtons(U);
							U.hoverShowButtons = ab;
							ad = _EditToolBase.getUICtrl().buildToolWrapDom(U);
							U.toolbar = ad;
							if (Y.EditRadiusBtn) {
								_EditRadiusBtn.getUICtrl().createEditRadiusBtnDom(U)
							}
							_EditToolBase.getUICtrl().creatHoverButtonsList(U);
							_EditToolBase.getUICtrl().creatButtonsList(U);
							E.getEventCtrl().setUnselectable(U);
							_EditToolBase.getEventCtrl().bindToolAndEditorCreatedEvent(U)
						}
						if (!X.data(h.SimpleTextEdit)) {
							ad.find(".simpleTextEditTool").hide();
							_EditToolBase.getEventCtrl().checkEditItemDisplay(U);
							ad.find(".simpleTextHoverTool").show()
						}
					}).unbind("dblclick.fkModuleEvent").bind("dblclick.fkModuleEvent", function(aa) {
						Z = c.top.$("#" + Y.css + "-toolBar-" + Y.moduleId);
						X.data(h.TriggerClick, true);
						Z.find(".tool-editContentNew .editToolIcon").trigger("click");
						_EditToolBase.getEventCtrl().editToolLogDog({
							module: V,
							command: BtnCommand.Dblclick
						})
					});
					if (p) {
						r(b).unbind(W).bind(W, function(aa) {
							if (aa.button != 0) {
								return
							}
							if (V.data(h.Mousemove) && r(".fk-popupWindowVT").length < 1) {
								d.getEventCtrl().getSelectText(X, false)
							}
						})
					}
				};
				Q.constructor.prototype.bindSimpleToolAllEvent = function(T) {
					var W = T.option,
						U = T.module,
						X, V = T.editor;
					U.unbind("mouseenter.fkModuleEvent").bind("mouseenter.fkModuleEvent", function(ac) {
						var ab = c.top.$("#" + W.css + "-toolBar-" + W.moduleId),
							aa, Z;
						var Y = r(this).offset().top - r(x.getPreviewDocument()).scrollTop();
						if (Y < 0) {
							return
						}
						clearTimeout(V.data(h.HoverToolTimeout));
						T.toolbar = ab;
						if (ab.length < 1) {
							Z = _EditBtnBase.getEventCtrl().getHoverShowButtons(T);
							T.hoverShowButtons = Z;
							ab = _EditToolBase.getUICtrl().buildToolWrapDom(T);
							T.toolbar = ab;
							if (W.EditRadiusBtn) {
								_EditRadiusBtn.getUICtrl().createEditRadiusBtnDom(T)
							}
							_EditToolBase.getUICtrl().creatHoverButtonsList(T);
							_EditToolBase.getEventCtrl().bindSimpleToolCreatedEvent(T)
						} else {}
					}).unbind("mouseleave.fkModuleEvent").bind("mouseleave.fkModuleEvent", function(Y) {
						var Z = 200;
						if (!V.data(h.SimpleTextEdit)) {
							V.data(h.HoverToolTimeout, setTimeout(function() {
								_EditToolBase.getEventCtrl().hideHoverTool(T)
							}, Z))
						}
					}).unbind("dblclick.fkModuleEvent").bind("dblclick.fkModuleEvent", function(Y) {
						if (W.dblclickFun && W.dblclickFun != "") {
							c.top.Fai.fkEval(W.dblclickFun)
						}
						_EditToolBase.getEventCtrl().editToolLogDog({
							module: U,
							command: BtnCommand.Dblclick
						})
					})
				};
				Q.constructor.prototype.checkEditorEditable = function(T) {
					var V = T.editor,
						U = V.attr(z.Contenteditable);
					if (typeof(U) == g || U == false || U == "false") {
						return false
					}
					return true
				};
				Q.constructor.prototype.backTextSelected = function(T) {
					var U = T.data(h.SignClassNum),
						W = T.find("." + T.data(h.EditSignClass) + U),
						V = T.data(h.HasRefreshClick);
					if (!V) {
						d.getEventCtrl().setNodeRange(W[0])
					}
					return N
				};
				Q.constructor.prototype.refeshEidtorHeight = function(U) {
					var Y = U.option,
						X = U.editor,
						V = U.module;
					if (X.hasClass("fk-editor-vertical-rl")) {
						return
					}
					var T = X[0].clientHeight,
						W = X[0].scrollHeight;
					if (!X.data(h.PreScrollHeight)) {
						X.data(h.PreScrollHeight, W)
					}
					if (X.data(h.ChangeCount) > Y.changeCount && (W > T || W != X.data(h.PreScrollHeight)) && !X.data(h.ScrollChangeChecking)) {
						X.data(h.PreScrollHeight, W);
						X.data(h.ScrollChangeChecking, true);
						V.css("height", W + "px");
						V.attr("_autoheight", 0);
						V.trigger("mouseover");
						setTimeout(function() {
							X.data(h.ScrollChangeChecking, false)
						}, 50)
					}
					Q.setEditorAutoHeight(V.attr("id").replace("module", ""))
				};
				Q.constructor.prototype.setEditorAutoHeight = function(U) {
					if (r("#fkEditor-" + U).length > 0 && r("#fkEditor-" + U).hasClass("fk-editor-vertical-rl")) {
						return
					}
					clearTimeout(S);
					var T = 200;
					S = setTimeout(function() {
						WXApp.autoModuleHeight(U)
					}, T);
					return N
				};
				Q.constructor.prototype.hideEditLine = function(T) {
					var V = T.option,
						U = T.editor,
						X = T.fkEditorLine,
						W = c.top.$("#fkEditor-toolBar-" + V.moduleId);
					if (U.data(h.SimpleTextEdit)) {
						return
					}
					if (W.find(".tool-link").find(".linkPanel").height() > 0) {
						return
					}
					if (X.hasClass("fk-editor-bd")) {
						X.addClass("fk-editor-bdNone");
						X.removeClass("fk-editor-bd")
					}
				};
				Q.constructor.prototype.simpleTextFormatPasteData = function(U, T) {
					E.getEventCtrl().filterPasteData(U);
					E.getEventCtrl().textPositionCorrect(U)
				}
			};
			return M = new O()
		};
		this.getUICtrl = function() {
			if (L) {
				return L
			}
			var O = function() {
				var P = this
			};
			return L = new O()
		}
	};
	_EditorBase = new C();
	var n = function() {
		var M;
		var L;
		var N = this;
		this.getEventCtrl = function() {};
		this.getUICtrl = function() {
			if (L) {
				return L
			}
			var O = function() {
				var P = this;
				P.constructor.prototype.createHoverBtnToolDom = function() {
					var Q = [];
					Q.push('<div style="clear:both;"></div>');
					return Q
				}
			};
			return L = new O()
		}
	};
	_EditBreakLineBtn = new n();
	var A = function() {
		var M;
		var L;
		var N = this;
		this.getEventCtrl = function() {};
		this.getUICtrl = function() {
			if (L) {
				return L
			}
			var O = function() {
				var P = this;
				P.constructor.prototype.createHoverBtnToolDom = function(Q) {
					var S = Q.btn,
						R, T = Q.option;
					if (T.btnModuleEdit) {
						Q.btnContent = ""
					} else {
						Q.btnContent = "<a " + q + ' class="editToolIcon" command ="' + S.command + '">' + S.title + "</a>"
					}
					R = _EditBtnBase.getUICtrl().createHoverBtnToolDom(Q);
					Q.btnContent = null;
					return R
				}
			};
			return L = new O()
		}
	};
	_EditContentBtn = new A();
	var f = function() {
		var M;
		var L;
		var N = this;
		this.getEventCtrl = function() {
			if (M) {
				return M
			}
			var O = function() {
				var Q = this,
					P;
				Q.constructor.prototype.setLinkAttr = function(R) {
					var S = R.element;
					S.attr("href", R._lurl);
					S.attr("_ltype", R._ltype);
					S.attr("_lide", R._lide);
					S.attr("_lname", R._lname);
					S.attr("target", R._target);
					return N
				};
				Q.constructor.prototype.setChildLink = function(S) {
					var U = S.element,
						R = S.wrapStr,
						W, V;
					if (!U || U.text().length <= 0 || !(U.find("div").length > 0 || U.find("p").length > 0)) {
						return
					}
					for (var T = 0; T < U.children().length; T++) {
						W = U.children().eq(T);
						if ((W.find("div").length > 0 || W.find("p").length > 0) && W.text().length > 0) {
							Q.setChildLink({
								element: W,
								wrapStr: R
							})
						} else {
							if (W.text().length > 0) {
								V = r(R).html(W.html());
								W.html(V)
							}
						}
					}
					return N
				};
				Q.constructor.prototype.handTagANotJump = function(R) {
					R.parents("a").each(function() {
						var S = r(this).attr("href");
						if (S && S != g && S != "") {
							r(this).attr("_href", S);
							r(this).attr("href", "");
							r(this).css("cursor", "text");
							r(this).unbind("click.notJump").bind("click.notJump", function() {
								return false
							})
						}
					})
				};
				Q.constructor.prototype.setLinkAll = function(X) {
					var R = X.text().length,
						S, ae, T = 0;
					if (R <= 0 || !X) {
						return N
					}
					if (X.children().length <= 0) {
						if (X.text().length <= 0) {
							return N
						}
						S = X.prop("tagName").toLowerCase();
						if (S != "a") {
							ae = X.parent("a");
							if (ae && ae.length >= 0) {
								ae = ae.clone();
								ae.text(X.text());
								X.html(ae.prop("outerHTML"))
							}
						}
						return N
					}
					for (var Y = 0; Y < X.children().length; Y++) {
						T += X.children().eq(Y).text().length
					}
					var V, ab, ad = "'.?+'",
						U, W, aa, ae, S, ac, Z;
					if (R != T && T > 0) {
						V = X.clone();
						ab = [];
						for (var Y = 0; Y < V.children().length; Y++) {
							ab.push(X.children().eq(Y));
							V.children().eq(Y).prop("outerHTML", ad)
						}
						U = [];
						W = V.html();
						aa = 0;
						ae = "";
						S = X.prop("tagName").toLowerCase();
						if (S != "a") {
							ae = X.parent("a")
						} else {
							ae = X
						}
						if (ae && ae.length >= 0) {
							for (var Y = 0; Y < ab.length; Y++) {
								aa = W.indexOf(ad);
								if (aa < 0 || W.length <= 0) {
									break
								} else {
									if (aa == 0) {
										if (!ab[Y].attr("style")) {
											ab[Y].attr("style", ae.attr("style"))
										}
										U.push(ab[Y].prop("outerHTML"));
										if (W.length > ad.length) {
											W = W.substring(ad.length, W.length)
										} else {
											W = ""
										}
										if (W.length > 0) {
											aa = W.indexOf(ad);
											if (aa < 0) {
												Z = ae.clone();
												Z.html(W);
												U.push(Z.prop("outerHTML"));
												W = ""
											} else {
												if (aa > 0) {
													ac = W.substr(0, aa);
													if (W.length > ad.length) {
														W = W.substring(ad.length, W.length)
													} else {
														W = ""
													}
													Z = ae.clone();
													Z.html(ac);
													U.push(Z.prop("outerHTML"))
												}
											}
										}
									} else {
										ac = W.substr(0, aa);
										Z = ae.clone();
										Z.html(ac);
										U.push(Z.prop("outerHTML"));
										if (W.length > aa + ad.length) {
											W = W.substring(aa + ad.length, W.length)
										} else {
											W = ""
										}
										if (!ab[Y].attr("style")) {
											ab[Y].attr("style", ae.attr("style"))
										}
										U.push(ab[Y].prop("outerHTML"))
									}
								}
							}
							if (W.length > 0) {
								Z = ae.clone();
								Z.html(W);
								U.push(Z.prop("outerHTML"))
							}
							X.html(U.join(""))
						}
					}
					for (var Y = 0; Y < X.children().length; Y++) {
						Q.setLinkAll(X.children().eq(Y))
					}
					return N
				};
				Q.constructor.prototype.fkEditorSetLink = function(ad) {
					var ab = ad.editor,
						X = ad.jumpCtrl,
						V = ad.isGloableLink;
					if (!X) {
						return N
					}
					var Y = X.attr("_ltype"),
						T = X.attr("_lide"),
						ae = X.attr("_lname"),
						ac = X.attr("_lurl"),
						S = X.attr("target"),
						R = X.attr("_linkdeleteclik"),
						U, aa, W = false,
						Z;
					ab.attr(z.Contenteditable, true);
					if (V) {
						d.getEventCtrl().setNodeRange(ab[0]);
						if (R == "true" && (typeof(T) == g || r.trim(T) == "")) {
							d.getEventCtrl().setSelection("Unlink");
							setTimeout(function() {
								var af = ab.find("a");
								for (var ag = 0; ag < af.length; ag++) {
									aLink = af.eq(ag);
									if (aLink.text().length <= 0) {
										aLink.remove()
									}
								}
								if (!ab.data(h.SimpleTextEdit)) {
									ab.attr(z.Contenteditable, false)
								}
							}, 300);
							return
						}
					} else {
						d.getEventCtrl().setSelectRange(ab.data(h.Range))
					}
					if (typeof(ac) == g) {
						return
					}
					if (Y == 108) {
						S = ""
					}
					aa = r(d.getEventCtrl().getSelectedNode());
					if (aa) {
						W = aa.css("color") == ab.css("color")
					}
					if (W) {
						d.getEventCtrl().setTagStyle({
							styleName: "color",
							styleValue: "#496EE8",
							isSetLinkColor: true,
							editor: ab
						})
					}
					U = ac + "&_saltLurl";
					d.getEventCtrl().setSelection(BtnCommand.Createlink, U);
					clearTimeout(P);
					P = setTimeout(function() {
						var af = ab.find("a"),
							ag, ai = ab.attr("style");
						if (af.length <= 0) {
							return
						}
						ab.height(ab.height() + "px");
						for (var ah = 0; ah < af.length; ah++) {
							ag = af.eq(ah);
							if (ag.text().length <= 0) {
								ag.remove()
							}
							if (U != ag.attr("href")) {
								continue
							}
							var ak = {
								element: ag,
								_lurl: ac,
								_ltype: Y,
								_lide: T,
								_lname: ae,
								_target: S
							};
							Q.setLinkAttr(ak);
							Z = "<a href='" + ac + "' _ltype='" + Y + "' _lide='" + T + "' _lname='" + ae + "' target='" + S + "'>";
							Q.setChildLink({
								element: ag,
								wrapStr: Z
							});
							if (W) {
								ag.css("color", "#496EE8")
							}
							if (k) {
								var aj = E.getEventCtrl().findTagInParent(ag, "a", ab.data(h.EndCheckClass));
								if (aj) {
									Q.setLinkAll(aj)
								}
							}
						}
						ab.attr("style", ai);
						if (!ab.data(h.SimpleTextEdit)) {
							ab.attr(z.Contenteditable, false)
						}
					}, 500);
					return N
				};
				Q.constructor.prototype.getLinkPreData = function() {
					var V = 0,
						T = "",
						Z = "",
						R = "",
						W = {
							_ltype: V,
							_lide: T,
							_lname: Z,
							_target: R
						};
					if (F) {
						return W
					}
					var Y = d.getEventCtrl().getWindowSelection(),
						X;
					if (!Y.anchorNode || !Y.getRangeAt) {
						return W
					}
					X = Y.getRangeAt(0);
					var aa = r(X.endContainer).find("a");
					if (aa.length <= 0) {
						aa = r(X.endContainer).closest("a");
						if (aa.length <= 0) {
							return W
						}
					}
					for (var U = 0; U < aa.length; U++) {
						var S = aa.eq(U);
						if (S.attr("_lide") && S.attr("_lide") != null) {
							V = S.attr("_ltype");
							T = S.attr("_lide");
							Z = S.attr("_lname");
							R = S.attr("target");
							break
						}
					}
					return W = {
						_ltype: V,
						_lide: T,
						_lname: Z,
						_target: R
					}
				};
				Q.constructor.prototype.getGlobalLinkPreData = function(V) {
					var Y = 0,
						S = "",
						X = "",
						R = "",
						W = {};
					var U = V.find("a"),
						T;
					if (U.length > 1) {
						T = U.eq(0)
					} else {
						T = U
					}
					if (T.attr("_lide") && T.attr("_lide") != null) {
						Y = T.attr("_ltype");
						S = T.attr("_lide");
						X = T.attr("_lname");
						R = T.attr("target")
					}
					return W = {
						_ltype: Y,
						_lide: S,
						_lname: X,
						_target: R
					}
				}
			};
			return M = new O()
		};
		this.getUICtrl = function() {
			if (L) {
				return L
			}
			var O = function() {
				var P = this;
				P.constructor.prototype.createBtnToolDom = function(Q) {
					return _EditBtnBase.getUICtrl().createBtnToolDom(Q)
				}
			};
			return L = new O()
		}
	};
	_EditLinkBtn = new f();
	var y = function() {
		var M;
		var L;
		var N = this;
		this.getEventCtrl = function() {
			if (M) {
				return M
			}
			var O = function() {
				var P = this;
				P.constructor.prototype.getOuterFunc = function() {
					return O = {
						simpleTextFormatPasteData: _EditorBase.getEventCtrl().simpleTextFormatPasteData,
					}
				}
			};
			return M = new O()
		};
		this.getUICtrl = function() {
			if (L) {
				return L
			}
			return L = new func()
		}
	};
	_EditorOuterFunc = new y();
	var e = function() {
		var M;
		var L;
		var N = this;
		this.getEventCtrl = function() {
			if (M) {
				return M
			}
			var O = function() {
				var W = this,
					P, Z, V =
					"keypress.fkeditorClick keyup.fkeditorClick keydown.fkeditorClick drop.fkeditorClick cut.fkeditorClick copy.fkeditorClick paste.fkeditorClick DOMCharacterDataModified.fkeditorClick DOMSubtreeModified.fkeditorClick",
					Q = "change.fkeditorClick",
					R = "click.fkeditorClick",
					T = "mouseover.fkeditorClick",
					S = "mouseleave.fkeditorClick",
					U = "mousedown.fkeditorClick",
					X = "mousemove.fkeditorClick",
					aa = "mouseup.fkeditorClick",
					Y = "keyup.fkeditorClick";
				W.constructor.prototype.bindEditorEvent = function(ab) {
					var ae = ab.option,
						ac = ab.module,
						ad = ab.editor,
						af = ab.toolbar,
						ag = ad.find(".editTip");
					emphasize = ae.css + "-tool-depressedNew", emphasizeHover = ae.css + "-tool-depressedNewHover", emphasizeShow =
						ae.css + "-tool-depressedNewShow";
					ag.unbind("click.editTipbutton").bind("click.editTipbutton", function() {
						ad.focus();
						ae.showEditTipWord = false;
						return false
					});
					if (ad.data(h.EditorEventBind)) {
						return
					}
					ad.data(h.EditorEventBind, true);
					ad.unbind(V).bind(V, function(ah) {
						r(this).trigger("change");
						if (!!ae.btnModuleEdit) {
							if (ah.which == 13) {
								return false
							}
						}
					}).unbind(Q).bind(Q, function() {
						if (ad.data(h.ChangeCount) > ae.changeCount) {
							if (ae.pageChangeFun && ae.pageChangeFun != "" && !ad.data(h.SetPageChange) && ad.find(".editTip").length <=
								0) {
								clearTimeout(P);
								P = setTimeout(function() {
									if (!ad.data(h.SimpleTextEdit) && ad.data(h.PreHtmlContent) == "") {
										ad.data(h.PreHtmlContent, ad.html())
									}
									if (ad.data(h.PreHtmlContent) != ad.html()) {
										ad.data(h.SetPageChange, true);
										c.top.Fai.fkEval(ae.pageChangeFun)
									}
								}, 200)
							}!ae.btnModuleEdit && _EditorBase.getEventCtrl().refeshEidtorHeight(ab)
						}
						if (r(this).hasClass("fk-editor-vertical-rl") && r(this).attr("_autoWidth") == "1") {
							ac.css("width", r(this).width() || parseInt(r(this).attr("_width")) + "px")
						}
						ad.data(h.ChangeCount, (parseInt(ad.data(h.ChangeCount)) + 1))
					}).unbind(R).bind(R, function(ah) {
						_EditToolBase.getEventCtrl().animateHideToolSecondPanel(ae);
						!ae.btnModuleEdit && _EditorBase.getEventCtrl().refeshEidtorHeight(ab);
						_EditorBase.getEventCtrl().logEditorSingleClick(ab);
						_EditorBase.getEventCtrl().stopBannerJump({
							clickEvent: ah
						})
					}).unbind(T).bind(T, function() {
						_EditToolBase.getEventCtrl().showToolBar(ab)
					}).unbind(S).bind(S, function() {
						ac.data(h.HoverToolOn, false);
						if (ad.data(h.HasRefreshClick)) {
							d.getEventCtrl().getSelectText(ad, false)
						}
					}).unbind(U).bind(U, function(ah) {
						if (ah.button != 0) {
							return
						}
						ac.data(h.Mousemove, false);
						ac.data(h.Mousedown, true);
						ac.data(h.ScreenX, ah.screenX);
						ac.data(h.ScreenY, ah.screenY);
						setTimeout(function() {
							_EditToolBase.getEventCtrl().animateHideToolSecondPanel(ae);
							_EditBtnBase.getEventCtrl().buttonEmphasize(ab)
						}, 100);
						ad.data(h.HasRefreshClick, true)
					}).unbind(X).bind(X, function(ak) {
						if (!ac.data(h.Mousedown)) {
							return
						}
						if (ac.data(h.ScreenX) > 0) {
							var aj = ak.screenX,
								ai = ak.screenY,
								ah = Math.pow((ac.data(h.ScreenX) - aj), 2) + Math.pow((ac.data(h.ScreenY) - ai), 2);
							if (ah > 1) {
								ac.data(h.Mousemove, true)
							}
						}
					}).unbind(aa).bind(aa, function(aj) {
						if (aj.button != 0) {
							return
						}
						var ai = ad.attr(z.Contenteditable),
							ah;
						if (!ac.data(h.Mousemove) && (ai == true || ai == "true")) {
							ac.addClass("formLockEdit");
							ac.removeClass("fk-hoverModule");
							ad.focus().find(".editTip").remove();
							clearTimeout(Z);
							Z = setTimeout(function() {
								_EditLinkBtn.getEventCtrl().handTagANotJump(ad);
								ad.css("cursor", "text").attr(z.Contenteditable, true);
								if (!ad.data(h.FirstChooseEditor)) {
									ad.data(h.FirstChooseEditor, true);
									E.getEventCtrl().textPositionCorrect(ad);
									if (ad.find(".editTip").length > 0) {
										ad.data(h.PreHtmlContent, "")
									} else {
										ad.data(h.PreHtmlContent, ad.html())
									}
								}
								ad.trigger("mouseover")
							}, 50);
							ad.trigger("mouseover");
							!ae.btnModuleEdit && _EditorBase.getEventCtrl().refeshEidtorHeight(ab);
							if (ad.data(h.RemoveUselessChildStyleCount) > 5) {
								ah = ad.attr("style");
								ad.height(ad.height() + "px");
								E.getEventCtrl().removeUselessChildStyle(ad, r(this));
								ad.data(h.RemoveUselessChildStyleCount, 0);
								ad.attr("style", ah)
							}
							ad.data(h.RemoveUselessChildStyleCount, (parseInt(ad.data(h.RemoveUselessChildStyleCount)) + 1))
						}
						if (!ac.data(h.Mousemove)) {
							ac.data(h.Mousedown, false)
						}
						ac.data(h.Mousemove, false)
					}).unbind(Y).bind(Y, function() {
						setTimeout(function() {
							_EditBtnBase.getEventCtrl().buttonEmphasize(ab)
						}, 100)
					}).focus(function() {
						if (ae.focusFun && ae.focusFun != "") {
							c.top.Fai.fkEval(ae.focusFun)
						}
						if (w) {
							var ah = b.createRange();
							ah.selectNodeContents(ad[0]);
							ah.collapse(false);
							d.getEventCtrl().setSelectRange(ah)
						}
					}).focusout(function() {
						ad.attr(z.Contenteditable, false);
						var ah = af.find(".tool");
						if (r(".popupBg").length <= 0) {
							ah.find("." + emphasize).removeClass(emphasizeShow).addClass(emphasizeHover)
						}
						ac.data(h.Mousedown, false);
						if (ae.blurFun && ae.blurFun != "") {
							c.top.Fai.fkEval(ae.blurFun)
						}
						ad.data(h.Onfocused, false);
						if (r.trim(ad.text()).length <= 0) {
							ad.html('<div class="editTip">双击输入内容...</div>')
						}
						ad.css("cursor", "");
						ad.parents("a").each(function() {
							var ai = r(this).attr("_href");
							var aj = r(this).attr("href");
							if (ai != "undefined" && ai != "") {
								r(this).attr("href", ai);
								r(this).removeAttr("_href");
								r(this).css("cursor", "");
								r(this).unbind("click.notJump")
							}
						})
					})
				}
			};
			return M = new O()
		};
		this.getUICtrl = function() {
			if (L) {
				return L
			}
			var O = function() {
				var P = this;
				P.constructor.prototype.creatFkEditorWrapDom = function(R) {
					var V = R.option,
						T = R.element,
						Q = T.parent("." + V.css + "-wrap"),
						U, S;
					if (Q.length > 0) {
						return
					}
					T.wrap('<div class="' + V.css + '-wrap"></div>');
					Q = T.parent("." + V.css + "-wrap");
					S = [];
					S.push('<div id="' + V.css + "-" + V.moduleId + '" class="fk-editor fkEditor ' + V.extClasses +
						'" style="border:0px;" _width="' + V.editorWidth + V.funit + '" _height="' + V.editorHeight + V.funit +
						'" onpaste="WXApp.simpleTextFormatPasteData(event, ' + V.moduleId + ')" ' + z.Contenteditable + "=false >");
					if (V.showEditTipWord) {
						S.push('<div class="editTip">' + V.editTipWord + "</div>")
					}
					S.push("</div>");
					Q.append(S.join(""));
					return N
				}
			};
			return L = new O()
		}
	};
	_FkEditor = new e();
	r.fn.fkEditor = function(P) {
		var O = {
			moduleId: "module0",
			simpleTool: false,
			toolExtClasses: "",
			css: "fkEditor",
			endCheckClass: "fkEditor-wrap",
			editSignClass: "fk-c-",
			tipTitle: true,
			width: "450px",
			height: "60px",
			funit: "px",
			defultContent: "",
			showEditTipWord: true,
			editTipWord: "双击输入内容...",
			changeCount: 1,
			systemModule: "",
			extClasses: "",
			toolBarWidth: 158,
			animationOtherConf: {
				toolBarWidth: 186
			},
			changeFun: "",
			focusFun: "",
			blurFun: "",
			pageChangeFun: "",
			deleteFun: "",
			editBtnModuleStyleBtnFun: "",
			jumpCtrlFun: "",
			globalJumpCtrlFun: "",
			saveGlobalJumpCtrlFun: "",
			cancelGlobalJumpCtrlFun: "",
			animationFun: "",
			EditFormatsBtn: {
				name: "字体",
				selectedData: [
					["宋体, SimSun", "宋体"],
					["新细明体, PMingLiU", "新细明体"],
					["仿宋_GB2312,FangSong_GB2312", "仿宋_GB2312"],
					["微软雅黑, Microsoft YaHei", "微软雅黑"],
					["Arial,微软雅黑", "Arial"],
					["隶书, SimLi", "隶书"],
					["幼圆", "幼圆"],
					["华文楷体 ,STKaiti", "华文楷体"],
					["方正舒体", "方正舒体"],
					["华文行楷", "华文行楷"],
					["华文彩云", "华文彩云"],
					["华文宋体", "华文宋体"],
					["楷体,楷体_GB2312,SimKai", "楷体"],
					["黑体, SimHei", "黑体"],
					["Tahoma, 微软雅黑", "Tahoma"],
					["impact, 微软雅黑", "impact"],
					["Arial Serif, 微软雅黑", "Arial Serif"],
					["Times New Roman, 微软雅黑", "Times New Roman"],
					["Georgia, 微软雅黑", "Georgia"],
					["Garamond, 微软雅黑", "Garamond"],
					["andale mono, 微软雅黑", "andale mono"],
					["arial black, avant garde, 微软雅黑", "arial black"],
					["comic sans ms, 微软雅黑", "comic sans ms"],
					["Aa甜甜圈, 微软雅黑", "甜甜圈", "", "needTip"],
					["字体管家幻影伯爵, 微软雅黑", "幻影伯爵", "", "needTip"],
					["字体管家润行, 微软雅黑", "润行", "", "needTip"],
					["字体管家棉花糖, 微软雅黑", "棉花糖", "", "needTip"],
					["奇思_粗宋, 微软雅黑", "奇思_粗宋", "", "needTip"],
					["Aa鬼泣, 微软雅黑", "鬼泣", "", "needTip"],
					["字体管家版宋, 微软雅黑", "版宋", "", "needTip"],
					["Aa夕禾, 微软雅黑", "夕禾", "", "needTip"],
					["思源黑体 CN Light, 微软雅黑", "思源黑体 Light", "", "needTip"],
					["思源黑体 CN Medium, 微软雅黑", "思源黑体 Medium", "", "needTip"],
					["思源黑体 CN Heavy, 微软雅黑", "思源黑体 Heavy", "", "needTip"],
					["思源宋体 CN Light, 微软雅黑", "思源宋体 Light", "", "needTip"],
					["思源宋体 CN Medium, 微软雅黑", "思源宋体 Medium", "", "needTip"],
					["思源宋体 CN Heavy, 微软雅黑", "思源宋体 Heavy", "", "needTip"],
					["站酷高端黑, 微软雅黑", "站酷高端黑", "", "needTip"],
					["站酷酷黑, 微软雅黑", "站酷酷黑", "", "needTip"],
					["站酷快乐体2016修订版, 微软雅黑", "站酷快乐体", "", "needTip"],
					["庞门正道标题体, 微软雅黑", "庞门正道标题体", "", "needTip"]
				]
			},
			EditFontSizeBtn: {
				name: "大小",
				selectedData: [
					["12px", "12px"],
					["14px", "14px"],
					["16px", "16px"],
					["18px", "18px"],
					["20px", "20px"],
					["24px", "24px"],
					["30px", "30px"],
					["36px", "36px"],
					["48px", "48px"],
					["60px", "60px"],
					["72px", "72px"],
					["84px", "84px"],
					["96px", "96px"],
					["108px", "108px"],
					["120px", "120px"]
				]
			},
			EditLineHeightBtn: {
				name: "行高",
				selectedData: [
					["12px", "12px"],
					["14px", "14px"],
					["16px", "16px"],
					["18px", "18px"],
					["20px", "20px"],
					["24px", "24px"],
					["30px", "30px"],
					["36px", "36px"],
					["48px", "48px"],
					["60px", "60px"],
					["72px", "72px"],
					["84px", "84px"],
					["96px", "96px"],
					["108px", "108px"],
					["120px", "120px"]
				]
			},
			EditTextAlignBtn: {
				name: "对齐方式",
				selectedData: [
					["justifyLeft", "左对齐", "justify justifyLeft"],
					["justifyCenter", "居中对齐", "justify justifyCenter"],
					["justifyRight", "右对齐", "justify justifyRight"],
					["justifyFull", "两端对齐", "justify justifyFull"]
				]
			},
			Tool: {
				show: true,
				width: "300px",
				height: "78px",
				ToolBtnOrder: ["EditColorBtn", "EditFormatsBtn", "EditFontSizeBtn", "EditBoldBtn", "EditItalicBtn",
					"EditUnderlineBtn", "EditSeperatorBtn", "EditWritingModeBtn", "EditLineHeightBtn", "EditTextAlignBtn",
					"EditSeperatorBtn", "EditLinkBtn", "EditRemoveFormatBtn"
				]
			},
			HoverTool: {
				show: true,
				width: "158px",
				animationShowWidth: "186px",
				height: "42px",
				ToolBtnOrder: ["EditContentBtn", "EditSeperatorBtn", "EditGlobalLinkBtn", "EditDeleteBtn"]
			},
			isMobi: false
		};
		var S = r.extend(O, P),
			L = r(this),
			R, N, M, Q = _EditorBase.getEventCtrl().getModule({
				option: S
			});
		if (!Q || Q.length <= 0) {
			return
		}
		k ? S.changeCount++ : "";
		if (S.simpleTool) {
			R = Q;
			R.data(h.SimpleTextEdit, false);
			_EditorBase.getEventCtrl().bindSimpleToolAllEvent({
				option: S,
				module: Q,
				editor: R
			})
		} else {
			if (S.btnModuleEdit) {
				R = Q.find("#module" + S.moduleId + "FlBtn");
				N = R;
				_EditorBase.getEventCtrl().bindAllEvent({
					option: S,
					module: Q,
					editor: R,
					fkEditorWrap: N
				})
			} else {
				_FkEditor.getUICtrl().creatFkEditorWrapDom({
					option: S,
					element: L
				});
				R = r("#" + S.css + "-" + S.moduleId);
				N = L.parent("." + S.css + "-wrap");
				_EditorBase.getEventCtrl().bindAllEvent({
					option: S,
					module: Q,
					editor: R,
					fkEditorWrap: N
				})
			}
		}
		R.data(h.ScrollChangeChecking, false);
		R.data(h.Onfocused, false);
		R.data(h.SetPageChange, false);
		R.data(h.LinkHasClick, false);
		R.data(h.ClearSpanCursoring, false);
		R.data(h.HasRefreshClick, false);
		R.data(h.PreHtmlContent, "");
		R.data(h.PreHtmlVal, 20);
		R.data(h.HasRsChildStyle, 0);
		R.data(h.EditSignClass, S.editSignClass);
		R.data(h.SignClassNum, 1);
		R.data(h.Option, S);
		R.data(h.ChangeCount, 0);
		R.data(h.FirstChooseEditor, false);
		R.data(h.RemoveUselessChildStyleCount, 6);
		R.data(h.EndCheckClass, S.endCheckClass);
		R.data(h.EditorEventBind, false);
		R.data(h.OuterFun, _EditorOuterFunc.getEventCtrl().getOuterFunc());
		L.data(h.Option, S);
		L.data(h.OuterFun, _EditorOuterFunc.getEventCtrl().getOuterFunc());
		L.data(h.Editor, R);
		WXApp.simpleTextList.allEditors.push({
			moduleId: S.moduleId,
			editor: R
		});
		return this
	}
})(jQuery, window, document, "undefined");
